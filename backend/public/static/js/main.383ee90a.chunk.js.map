{"version":3,"sources":["routes/exportPage.module.css","routes/projects.module.css","components/controls/controls.module.css","components/actions/actions.module.css","components/mediaPool/mediaPool.module.css","routes/login.module.css","components/elements/properties.module.css","components/mediaPlayer/mediaPlayer.module.css","routes/editor.module.css","routes/about.module.css","components/timeline/timeline.module.css","utils/utils.ts","components/mediaPool/mediaPool.tsx","components/controls/controls.tsx","components/mediaPlayer/mediaPlayer.tsx","api/index.js","components/actions/actions.tsx","components/timeline/timeline.tsx","components/elements/properties.tsx","routes/editor.tsx","routes/about.tsx","routes/exportPage.tsx","routes/login.tsx","routes/projects.tsx","model/playbackController.tsx","model/webgl.ts","model/shaders.ts","model/mediaManager.tsx","model/projectManager.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["module","exports","lerp","start","end","t","calculateProperties","segment","timestamp","PROPERTY_NAMES","properties","property","push","keyframes","startTime","endTime","i","length","frame","j","undefined","value","output","Math","min","max","options","types","description","accept","multiple","excludeAcceptAllOption","MediaPool","props","useState","status","setStatus","draggedOn","setDraggedOn","listItems","mediaList","map","item","index","draggableId","file","name","provided","className","styles","card","ref","innerRef","draggableProps","dragHandleProps","img","src","thumbnail","alt","cardCaption","button","onClick","deleteVideo","files","window","showOpenFilePicker","Handle","entry","getFile","addVideo","console","log","onDrag","e","preventDefault","stopPropagation","dataTransfer","Object","values","items","getAsFile","type","includes","alert","onDragOver","onDragEnter","onDragLeave","onDrop","container","hbox","title","addFiles","droppableId","droppableProps","placeholder","loader","Controls","playVideo","pauseVideo","isPlaying","currentTime","projectDuration","setCurrentTime","splitVideo","deleteSelectedSegment","setScaleFactor","scaleFactor","trackbar","step","onChange","event","target","MediaPlayer","canvasRef","projectWidth","projectHeight","useRef","useEffect","classList","add","canvas","style","aspectRatio","current","appendChild","instance","axios","create","baseURL","interceptors","request","use","req","headers","sessionStorage","getItem","error","Promise","reject","Actions","history","useHistory","loadStatus","setLoadStatus","color","message","popup","popupContainer","display","backgroundColor","popupClose","to","logo","clientId","render","renderProps","disabled","buttonText","onLogoutSuccess","setProjectUser","removeItem","data","projectId","projectUser","trackList","put","then","res","success","Timeline","DragMode","selectedSegment","setSelectedSegment","updateSegment","setTrackList","COLORS","timeout","containerRef","trackDivs","setTrackDivs","segmentStartOffsetRef","clickStartTimeRef","dragMode","NONE","formatTime","time","s","parseFloat","toFixed","currentMinute","floor","currentSecond","currentMillisecond","minute","String","second","millisecond","ruler","rows","clientWidth","divisions","s10","flex","nativeEvent","offsetX","sec","height","track","calculateHoverState","setDragMode","TRIM_LEFT","TRIM_RIGHT","MOVE","genTrack","segments","trackInd","segmentDivs","isSelected","space","duration","fullCard","backgroundImage","media","backgroundSize","border","borderRadius","boxShadow","onMouseDown","clientX","getBoundingClientRect","left","scrollLeft","onMouseMove","onMouseLeave","keyframeCard","keyframe","transform","keyframeBtn","onDoubleClick","ind","listener","document","addEventListener","removeEventListener","mode","body","cursor","clamp","setTimeout","change","y","clientY","top","scrollTop","requestedTime","foundTime","Infinity","newTime","abs","sources","find","source","newElement","element","cloneNode","pause","inUse","newSegment","insertedInd","newTrackList","x","pop","mediaStart","handleMove","tracks","minWidth","minHeight","clientHeight","pointer","highlight","indicator","Properties","currKeyframe","posState","setPositionState","cropState","setCropState","scaleState","setScaleState","checkKeyframeExists","checkPropState","currKeyframeIndex","scaleX","scaleY","trimBottom","trimTop","trimLeft","trimRight","_updateSegment","args","isButtonPressed","insertPos","updatedKeyframe","toDelete","entries","key","slice","findNextSetKeyframe","findPrevSetKeyframe","slideIn","tags","keyframeNext","nextKeyframeIndex","keyframePrev","prevKeyframeIndex","effectBox","tag","inputTagBox","inputBtn","inputTag","Editor","onDragEnd","result","destination","splice","reorderedItem","setMediaList","dragAndDrop","About","href","ExportPage","load","setLoad","AddProject","isRecordingRef","round","imageProperties","process","progressBar","label","sidebar","vbar","btn","active","downlaod","Render","main","Login","gapi","client","init","scope","login","loginBox","google","onSuccess","response","setItem","tokenId","get","email","onFailure","cookiePolicy","Projects","modifyProject","modifyingProject","_id","setModifyingProject","newProjects","projects","proj","setProjects","project","projectBox","evt","id","delete","filter","onSubmit","required","framerate","width","NewProject","new","PlaybackController","recordedChunks","setIsPlaying","_setCurrentTime","trackListRef","playbackStartTimeRef","lastPlaybackTimeRef","projectDurationRef","mediaListRef","isPlayingRef","mediaRecorderRef","performance","now","renderFrame","update","curTime","elements","needsSeek","mediaTime","paused","resolve","onseeked","allSettled","play","resume","renderer","drawSegments","stop","projectFramerate","handleDataAvailable","size","download","blob","Blob","url","URL","createObjectURL","a","createElement","click","revokeObjectURL","path","stream","captureStream","MediaRecorder","mimeType","ondataavailable","onstop","WebGLRenderer","context","program","positionLocation","texcoordLocation","matrixLocation","textureLocation","positionBuffer","texcoordBuffer","this","getContext","createProgram","attachShader","loadShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","useProgram","getAttribLocation","getUniformLocation","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","viewport","clear","COLOR_BUFFER_BIT","drawImage","flush","shaderSource","shaderType","shader","createShader","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","split","l","join","deleteShader","tex","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","Uint8Array","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","texture","enableVertexAttribArray","vertexAttribPointer","FLOAT","texcoords","matrix","m4","ortho","newWidth","videoWidth","newHeight","videoHeight","translate","scale","uniformMatrix4fv","uniform1i","drawArrays","TRIANGLES","MediaManager","setProjectDuration","thumbnailCanvas","thumbnailCanvasContext","generateThumbnail","elm","preload","onloadeddata","toDataURL","uniqueFiles","found","filesList","segmentTimeCut","lenKeyframes","keyFrameIndex","interpKeyFrame","leftSegmentKeyFrames","rightSegmentKeyFrames","newInterpKeyFrame","concat","ProjectManager","currentProject","setProjectId","projectName","setProjectName","setProjectWidth","setProjectHeight","setProjectFramerate","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.383ee90a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"exportPage_container__1Upwz\",\"projectBox\":\"exportPage_projectBox__3BX0a\",\"sidebar\":\"exportPage_sidebar__KDNs_\",\"new\":\"exportPage_new__1lsco\",\"downlaod\":\"exportPage_downlaod__311wr\",\"button\":\"exportPage_button__2Gv62\",\"main\":\"exportPage_main__H891n\",\"vbar\":\"exportPage_vbar__390C7\",\"logo\":\"exportPage_logo__S34rS\",\"btn\":\"exportPage_btn__34uP2\",\"active\":\"exportPage_active__3kNFP\",\"mediaList\":\"exportPage_mediaList__1Scke\",\"card\":\"exportPage_card__9NnKe\",\"imageProperties\":\"exportPage_imageProperties__3B9KT\",\"process\":\"exportPage_process__128Tg\",\"progressBar\":\"exportPage_progressBar__1ihTd\",\"label\":\"exportPage_label__hYqyH\",\"render\":\"exportPage_render__3Qroe\",\"login\":\"exportPage_login__2T-_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"projects_container__2Mb-8\",\"projectBox\":\"projects_projectBox__3Hv9U\",\"boxShadow\":\"projects_boxShadow__1bISL\",\"sidebar\":\"projects_sidebar__2ZHiN\",\"popup\":\"projects_popup__wZLqi\",\"popupClose\":\"projects_popupClose__nMx7_\",\"popupContainer\":\"projects_popupContainer__1iLVs\",\"new\":\"projects_new__2bUTB\",\"downlaod\":\"projects_downlaod__1cI7M\",\"button\":\"projects_button__7Im6G\",\"main\":\"projects_main__2lXCM\",\"vbar\":\"projects_vbar__Hw9Pb\",\"logo\":\"projects_logo__2q2IB\",\"btn\":\"projects_btn__3B-HD\",\"active\":\"projects_active__3ghUc\",\"login\":\"projects_login__1L6RV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"controls_container__EozFA\",\"trackbar\":\"controls_trackbar__NO5TT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"actions_container__1vj3C\",\"logo\":\"actions_logo__adcwE\",\"popup\":\"actions_popup__2kxD3\",\"popupContainer\":\"actions_popupContainer__1k_3M\",\"popupClose\":\"actions_popupClose__nhZ8-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"mediaPool_container__e0GsW\",\"mediaList\":\"mediaPool_mediaList__2lN8x\",\"hbox\":\"mediaPool_hbox__VhThN\",\"addFiles\":\"mediaPool_addFiles__3XV1U\",\"card\":\"mediaPool_card__1vZRe\",\"img\":\"mediaPool_img__2XYkg\",\"cardCaption\":\"mediaPool_cardCaption__3yPVL\",\"title\":\"mediaPool_title__LN0XY\",\"button\":\"mediaPool_button__386sM\",\"loader\":\"mediaPool_loader__3AREg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__3HpzL\",\"logo\":\"login_logo__2o7Kj\",\"button\":\"login_button__384LT\",\"loginBox\":\"login_loginBox__1CDJO\",\"google\":\"login_google__NyzaI\",\"login\":\"login_login__3ajYI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"properties_container__2vcQT\",\"slideIn\":\"properties_slideIn__50cRV\",\"title\":\"properties_title__18goP\",\"keyframePrev\":\"properties_keyframePrev__3iYeC\",\"keyframeNext\":\"properties_keyframeNext__1qCgv\",\"keyframeBtn\":\"properties_keyframeBtn__2ImgD\",\"tags\":\"properties_tags__3pjoS\",\"effectBox\":\"properties_effectBox__UfJfw\",\"inputBtn\":\"properties_inputBtn__yipHg\",\"tag\":\"properties_tag__3pu_5\",\"inputTag\":\"properties_inputTag__Az_Ww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"mediaPlayer_container__2_F00\",\"canvas\":\"mediaPlayer_canvas__1EgTq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"editor_container__3cKHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"about_container__2evO6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"timeline_container__34QPE\",\"tracks\":\"timeline_tracks__30o8c\",\"timebar\":\"timeline_timebar__3JhvD\",\"time\":\"timeline_time__2uD2L\",\"indicator\":\"timeline_indicator__831IR\",\"pointer\":\"timeline_pointer__2Y3dD\",\"track\":\"timeline_track__1iv85\",\"card\":\"timeline_card__71JDV\",\"fullCard\":\"timeline_fullCard__1yG4W\",\"keyframeCard\":\"timeline_keyframeCard__d-5XW\",\"keyframeBtn\":\"timeline_keyframeBtn__3pMDo\",\"ruler\":\"timeline_ruler__3ys_-\",\"s10\":\"timeline_s10__1Mh0X\",\"sec\":\"timeline_sec__1W_d_\",\"rulerCon\":\"timeline_rulerCon__hOz_1\",\"move\":\"timeline_move__3Vpp6\"};","import { KeyFrame, Segment } from '../model/types';\n\ninterface Property {\n  start: number;\n  startTime: number;\n  end: number;\n  endTime: number;\n}\n\nexport const lerp = (start: number, end: number, t: number) => {\n  return (end - start) * t + start;\n};\n\nexport const inverseLerp = (value: number, start: number, end: number) => {\n  if (end === start) return 1;\n  return Math.min(Math.max((value - start) / (end - start), 0), 1);\n};\n\nexport const calculateProperties = (\n  segment: Segment | null,\n  timestamp: number\n): KeyFrame => {\n  timestamp -= segment ? segment.start : 0;\n\n  const PROPERTY_NAMES = [\n    'x',\n    'y',\n    'scaleX',\n    'scaleY',\n    'trimLeft',\n    'trimRight',\n    'trimBottom',\n    'trimTop',\n  ];\n  let properties: Property[] = [];\n  for (const property of PROPERTY_NAMES) {\n    properties.push({\n      // @ts-ignore\n      start: segment ? segment.keyframes[0][property] ?? 0 : 0,\n      startTime: 0,\n      //@ts-ignore\n      end: segment ? segment.keyframes[0][property] ?? 0 : 0,\n      endTime: 0,\n    });\n  }\n\n  if (segment) {\n    for (let i = 0; i < segment.keyframes.length; i++) {\n      const frame = segment.keyframes[i];\n\n      for (let j = 0; j < PROPERTY_NAMES.length; j++) {\n        //@ts-ignore\n        if (frame[PROPERTY_NAMES[j]] !== undefined) {\n          properties[j].start = properties[j].end;\n          properties[j].startTime = properties[j].endTime;\n          //@ts-ignore\n          properties[j].end = frame[PROPERTY_NAMES[j]];\n          properties[j].endTime = frame.start;\n        }\n      }\n      if (frame.start > timestamp) break;\n    }\n  }\n\n  let output = { start: 0 };\n  for (let i = 0; i < PROPERTY_NAMES.length; i++) {\n    //@ts-ignore\n    output[PROPERTY_NAMES[i]] = lerp(\n      properties[i].start,\n      properties[i].end,\n      inverseLerp(timestamp, properties[i].startTime, properties[i].endTime)\n    );\n  }\n\n  return output;\n};\n","import styles from './mediaPool.module.css';\nimport React, { useState } from 'react';\nimport { Media } from '../../model/types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst options = {\n  types: [\n    {\n      description: 'Video file',\n      accept: {\n        'videos/*': ['.mp4', '.mov', '.wmv', '.avi', '.flv'],\n      },\n    },\n    {\n      description: 'Image file',\n      accept: {\n        'images/*': ['.jpg', '.png', '.gif', '.jpeg'],\n      },\n    },\n  ],\n  multiple: true,\n  excludeAcceptAllOption: true,\n};\n\nexport default function MediaPool(props: any) {\n  const [status, setStatus] = useState<string>('');\n  const [draggedOn, setDraggedOn] = useState<String>('');\n\n  const listItems = props.mediaList.map((item: Media, index: number) => {\n    return (\n      <Draggable\n        key={item.file.name}\n        draggableId={item.file.name}\n        index={index}\n      >\n        {(provided) => (\n          <li\n            className={`${styles.card}`}\n            key={item.file.name}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <img\n              className={styles.img}\n              src={item.thumbnail}\n              alt={item.file.name}\n            />\n            <p className={styles.cardCaption}>{item.file.name}</p>\n            <button\n              className={styles.button}\n              onClick={() => props.deleteVideo(item)}\n            >\n              <span className=\"material-icons\">delete</span>\n            </button>\n          </li>\n        )}\n      </Draggable>\n    );\n  });\n\n  const onClick = async () => {\n    try {\n      const files: File[] = [];\n      //@ts-ignore\n      const Handle = await window.showOpenFilePicker(options);\n      setStatus('Loading...');\n      for (const entry of Handle) {\n        let file = await entry.getFile();\n        files.push(file);\n      }\n      await props.addVideo(files);\n      setStatus('');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onDrag = async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDraggedOn('');\n    if (!e.dataTransfer) return;\n    const files: File[] = [];\n\n    for (const item of Object.values(e.dataTransfer.items)) {\n      const file = item.getAsFile();\n\n      if (\n        file !== null &&\n        (file.type.includes('video/') || file.type.includes('image/'))\n      )\n        files.push(file);\n      else\n        alert(\n          `Could not upload file: ${file?.name}. Only upload videos or images.`\n        );\n    }\n    await props.addVideo(files);\n    setStatus('');\n  };\n\n  return (\n    <div\n      onDragOver={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        setDraggedOn('draggedOn');\n      }}\n      onDragEnter={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        setDraggedOn('draggedOn');\n      }}\n      onDragLeave={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        setDraggedOn('');\n      }}\n      onDrop={onDrag}\n      className={`${styles.container} ${draggedOn}`}\n    >\n      <div className={styles.hbox}>\n        <h2 className={styles.title}>Project Files</h2>\n        <button\n          className={styles.addFiles}\n          onClick={onClick}\n          title=\"Add files\"\n        >\n          <span className=\"material-icons md-36\">add</span>\n        </button>\n      </div>\n      <div className={styles.mediaList}>\n        <Droppable droppableId=\"card\">\n          {(provided) => (\n            <ul\n              className=\"card\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {listItems}\n              {provided.placeholder}\n            </ul>\n          )}\n        </Droppable>\n      </div>\n\n      <p className={styles.loader}>{status}</p>\n    </div>\n  );\n}\n","import { ChangeEvent } from 'react';\nimport styles from './controls.module.css';\n\nexport default function Controls({\n  playVideo,\n  pauseVideo,\n  isPlaying,\n  currentTime,\n  projectDuration,\n  setCurrentTime,\n  splitVideo,\n  deleteSelectedSegment,\n  setScaleFactor,\n  scaleFactor,\n}: {\n  playVideo: any;\n  pauseVideo: any;\n  isPlaying: boolean;\n  currentTime: number;\n  projectDuration: number;\n  splitVideo: any;\n  setCurrentTime: (timestamp: number) => void;\n  deleteSelectedSegment: any;\n  setScaleFactor: (scale: number) => void;\n  scaleFactor: number;\n}) {\n  const togglePlaying = () => {\n    if (isPlaying) {\n      pauseVideo();\n    } else {\n      playVideo();\n    }\n  };\n\n  const increaseScale = () => {\n    setScaleFactor(Math.min(1, scaleFactor * 1.2));\n  };\n\n  const decreaseScale = () => {\n    setScaleFactor(Math.max(0.0001, scaleFactor * 0.8));\n  };\n\n  const onSeek = (event: ChangeEvent<HTMLInputElement>) => {\n    setCurrentTime(+event.target.value * projectDuration);\n  };\n\n  const createSplit = () => {\n    splitVideo(currentTime);\n  };\n\n  return (\n    <div className={styles.container}>\n      <button className={styles.button}>\n        <span className=\"material-icons\">skip_previous</span>\n      </button>\n      <button\n        className={styles.button}\n        onClick={togglePlaying}\n        title={isPlaying ? 'Pause' : 'Play'}\n      >\n        <span className=\"material-icons\">\n          {isPlaying ? 'pause' : 'play_arrow'}\n        </span>\n      </button>\n      <button className={styles.button}>\n        <span className=\"material-icons\">skip_next</span>\n      </button>\n      <input\n        className={styles.trackbar}\n        type=\"range\"\n        min=\"0\"\n        max=\"1\"\n        step={0.001}\n        onChange={onSeek}\n        value={projectDuration === 0 ? 0 : currentTime / projectDuration}\n      ></input>\n      <button\n        className={styles.button}\n        title=\"Volume\"\n      >\n        <span className=\"material-icons\">volume_up</span>\n      </button>\n      <button\n        className={styles.button}\n        onClick={decreaseScale}\n        title=\"Zoom out\"\n      >\n        <span className=\"material-icons\">remove</span>\n      </button>\n      <button\n        className={styles.button}\n        onClick={increaseScale}\n        title=\"Zoom In\"\n      >\n        <span className=\"material-icons\">add</span>\n      </button>\n      <button\n        className={styles.button}\n        onClick={createSplit}\n        title=\"Split\"\n      >\n        <span className=\"material-icons\">content_cut</span>\n      </button>\n      <button\n        className={styles.button}\n        onClick={deleteSelectedSegment}\n        title=\"Delete\"\n      >\n        <span className=\"material-icons\">delete</span>\n      </button>\n      <button\n        className={styles.button}\n        title=\"Duplicate\"\n      >\n        <span className=\"material-icons\">content_copy</span>\n      </button>\n    </div>\n  );\n}\n","import styles from './mediaPlayer.module.css';\nimport { useEffect, useRef } from 'react';\n\nexport default function MediaPlayer({\n  canvasRef,\n  projectWidth,\n  projectHeight,\n}: {\n  canvasRef: HTMLCanvasElement;\n  projectWidth: number;\n  projectHeight: number;\n}) {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    canvasRef.classList.add(styles.canvas);\n    canvasRef.style.aspectRatio = `${projectWidth / projectHeight}`;\n    ref.current?.appendChild(canvasRef);\n  }, []);\n\n  return (\n    <div\n      className={styles.container}\n      ref={ref}\n    ></div>\n  );\n}\n","import axios from 'axios';\n\nconst config = {\n  baseURL: 'http://localhost:8000',\n};\nconst instance = axios.create(config);\ninstance.interceptors.request.use(\n  function (req) {\n    req.headers['Authorization'] = `Bearer ${sessionStorage.getItem('token')}`;\n    return req;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\nexport default instance;\n","import { useState } from 'react';\nimport styles from './actions.module.css';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Media, Segment } from '../../model/types';\nimport { GoogleLogout } from 'react-google-login';\nimport instance from '../../api';\nexport default function Actions(props: {\n  projectId: string;\n  projectUser: string;\n  mediaList: Media[];\n  trackList: Segment[][];\n  setProjectUser: (user: string) => void;\n}) {\n  const history = useHistory();\n\n  const [loadStatus, setLoadStatus] = useState<string>('down');\n\n  const saveProject = () => {\n    setLoadStatus('loading');\n    let data = {\n      projectId: props.projectId,\n      projectUser: props.projectUser,\n      mediaList: props.mediaList,\n      trackList: props.trackList,\n    };\n    instance.put('/saveProject', data).then((res) => {\n      if (res.status === 200) {\n        setLoadStatus('success');\n        console.log(res.data.success);\n      } else {\n        setLoadStatus(res.data.error);\n        console.log(res.data.error);\n      }\n    });\n  };\n\n  let color = 'rgb(51, 51, 51)';\n  let message = 'saving your project...';\n\n  if (loadStatus === 'loading') {\n    color = 'rgb(51, 51, 51)';\n    message = 'saving your project...';\n  } else if (loadStatus === 'success') {\n    color = 'rgb(0, 153, 51)';\n    message = 'Project saved successfully!';\n  } else {\n    color = 'rgb(204, 0, 0)';\n    message = loadStatus;\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.popup}>\n        <div\n          className={styles.popupContainer}\n          style={{\n            display: loadStatus === 'down' ? 'none' : 'block',\n            backgroundColor: `${color}`,\n          }}\n        >\n          <button\n            className={styles.popupClose}\n            onClick={() => {\n              setLoadStatus('down');\n            }}\n          >\n            <span className=\"material-icons\">close</span>\n          </button>\n          {message}\n        </div>\n      </div>\n\n      <Link to=\"/projects\">\n        <button className={styles.button}>\n          <img\n            className={styles.logo}\n            src=\"/logo192.png\"\n          />\n        </button>\n      </Link>\n      <GoogleLogout\n        clientId=\"1010611727033-t5uiv067a9db9j900i9lnpqi3jncmtlt.apps.googleusercontent.com\"\n        render={(renderProps) => (\n          <button\n            className={styles.button}\n            title=\"Logout\"\n            onClick={renderProps.onClick}\n            disabled={renderProps.disabled}\n          >\n            <span className=\"material-icons\">logout</span>\n          </button>\n        )}\n        buttonText=\"Logout\"\n        onLogoutSuccess={() => {\n          props.setProjectUser('');\n          sessionStorage.removeItem('token');\n          history.push('/');\n        }}\n      ></GoogleLogout>\n      <Link to=\"/export\">\n        <button\n          className={styles.button}\n          title=\"Export\"\n        >\n          <span className=\"material-icons\">save_alt</span>\n        </button>\n      </Link>\n      <button\n        className={styles.button}\n        title=\"Save\"\n        onClick={saveProject}\n      >\n        <span className=\"material-icons\">save</span>\n      </button>\n      <button\n        className={styles.button}\n        onClick={() => history.push('/about')}\n        title=\"About\"\n      >\n        <span className=\"material-icons\">help_outline</span>\n      </button>\n      <button className={styles.button}>\n        <span className=\"material-icons\">tonality</span>\n      </button>\n    </div>\n  );\n}\n","import styles from './timeline.module.css';\nimport { Segment, SegmentID } from '../../model/types';\nimport { useState, MouseEvent, useRef, useEffect } from 'react';\nimport { lerp } from '../../utils/utils';\nimport { Droppable } from 'react-beautiful-dnd';\n\nexport default function Timeline({\n  trackList,\n  projectDuration,\n  selectedSegment,\n  setSelectedSegment,\n  currentTime,\n  setCurrentTime,\n  updateSegment,\n  scaleFactor,\n  setTrackList,\n}: {\n  trackList: Segment[][];\n  projectDuration: number;\n  selectedSegment: SegmentID | null;\n  setSelectedSegment: (selected: SegmentID | null) => void;\n  currentTime: number;\n  setCurrentTime: (timestamp: number) => void;\n  updateSegment: (id: SegmentID, segment: Segment) => void;\n  scaleFactor: number;\n  setTrackList: (tracks: Segment[][]) => void;\n}) {\n  enum DragMode {\n    NONE,\n    MOVE,\n    TRIM_LEFT,\n    TRIM_RIGHT,\n  }\n\n  const COLORS = [\n    [255, 0, 0],\n    [82, 0, 255],\n    [0, 255, 15],\n    [234, 0, 255],\n    [25, 0, 255],\n    [255, 231, 0],\n  ];\n  const RESIZE_OFFSET = 10;\n  const COLOR_MULTIPLER = 0.5;\n  const timeout = useRef<number>(0);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [trackDivs, setTrackDivs] = useState<JSX.Element[]>([]);\n  const segmentStartOffsetRef = useRef<number>(0);\n  const clickStartTimeRef = useRef<number>(-1);\n  const dragMode = useRef<DragMode>(DragMode.NONE);\n\n  const formatTime = (time: number) => {\n    let s = parseFloat((time / 1000).toFixed(2));\n\n    let currentMinute = Math.floor(s / 60);\n    let currentSecond = Math.floor(s / 1) - currentMinute * 60;\n    let currentMillisecond = (s - Math.floor(s / 1)) * 100;\n    currentSecond = currentSecond + Math.floor(currentMillisecond / 30);\n    currentMillisecond =\n      currentMillisecond - 30 * Math.floor(currentMillisecond / 30);\n    let minute = String(currentMinute);\n    while (minute.length < (2 || 2)) {\n      minute = '0' + minute;\n    }\n    let second = String(currentSecond);\n    while (second.length < (2 || 2)) {\n      second = '0' + second;\n    }\n    let millisecond = currentMillisecond.toFixed(0);\n    while (millisecond.length < (2 || 2)) {\n      millisecond = '0' + millisecond;\n    }\n\n    return minute + ':' + second + ':' + millisecond;\n  };\n\n  const ruler = () => {\n    if (!containerRef.current) return;\n    let rows: any[] = [];\n\n    let length = Math.max(\n      containerRef.current.clientWidth / scaleFactor,\n      projectDuration\n    );\n    let divisions = Math.floor((length * scaleFactor) / 100);\n\n    for (let i = 0; i < divisions; i++) {\n      let time = (length / divisions) * i;\n      rows.push(\n        <div\n          className={styles.s10}\n          key={time}\n          style={{ flex: `0 0 ${(length / divisions) * scaleFactor}px` }}\n          onClick={(event) => {\n            event.stopPropagation();\n            setCurrentTime(\n              lerp(\n                time,\n                (length / divisions) * (i + 1),\n                event.nativeEvent.offsetX / ((length / divisions) * scaleFactor)\n              )\n            );\n          }}\n        >\n          <p className={styles.time}>{formatTime(time)}</p>\n          <div className={styles.sec}></div>\n          <div className={styles.sec}></div>\n          <div className={styles.sec}></div>\n          <div className={styles.sec}></div>\n          <div className={styles.sec}></div>\n          {i === 0 ? (\n            <div\n              className={styles.sec}\n              style={{ height: 14 }}\n            ></div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    }\n\n    return <div className={`${styles.track} ${styles.ruler}`}>{rows}</div>;\n  };\n\n  const calculateHoverState = (event: MouseEvent) => {\n    if (containerRef.current === null || clickStartTimeRef.current !== -1)\n      return;\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (event.nativeEvent.offsetX < RESIZE_OFFSET) {\n      setDragMode(DragMode.TRIM_LEFT);\n    } else if (\n      event.nativeEvent.offsetX >\n      (event.nativeEvent.target as HTMLDivElement).clientWidth - RESIZE_OFFSET\n    ) {\n      setDragMode(DragMode.TRIM_RIGHT);\n    } else {\n      setDragMode(DragMode.MOVE);\n    }\n  };\n\n  const genTrack = (segments: Segment[], trackInd: number) => {\n    let segmentDivs = [];\n\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const color = COLORS[i % COLORS.length];\n      const isSelected =\n        selectedSegment !== null &&\n        selectedSegment.track === trackInd &&\n        selectedSegment.index === i;\n\n      let space =\n        segment.start -\n        (i === 0 ? 0 : segments[i - 1].start + segments[i - 1].duration);\n      segmentDivs.push(\n        <div style={{ flex: `0 0 ${space * scaleFactor}px` }}></div>\n      );\n\n      segmentDivs.push(\n        <div\n          className={`${styles.fullCard}`}\n          style={{\n            flex: `0 0 ${segment.duration * scaleFactor - 4}px`,\n          }}\n          onClick={(event) => {\n            event.stopPropagation();\n          }}\n        >\n          <div\n            className={`${styles.card}`}\n            style={{\n              backgroundImage: `url(${segment.media.thumbnail})`,\n              backgroundSize: 'auto 100%',\n              backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\n              border: `2px solid rgb(${\n                isSelected ? color[0] : color[0] * COLOR_MULTIPLER\n              }, ${isSelected ? color[2] : color[2] * COLOR_MULTIPLER}, ${\n                isSelected ? color[2] : color[2] * COLOR_MULTIPLER\n              })`,\n              borderRadius: '2px',\n              boxShadow: isSelected\n                ? `rgb(${color[0]}, ${color[1]}, ${color[2]}, 0.5) 0px 0px 10px`\n                : '',\n              height: '56px',\n            }}\n            onMouseDown={(event) => {\n              if (containerRef.current === null || event.button !== 0) return;\n              event.stopPropagation();\n              setSelectedSegment({ track: trackInd, index: i });\n\n              clickStartTimeRef.current =\n                (event.nativeEvent.clientX -\n                  containerRef.current.getBoundingClientRect().left +\n                  containerRef.current.scrollLeft) /\n                scaleFactor;\n              segmentStartOffsetRef.current =\n                clickStartTimeRef.current - trackList[trackInd][i].start;\n\n              calculateHoverState(event);\n            }}\n            onMouseMove={calculateHoverState}\n            onMouseLeave={() => {\n              if (clickStartTimeRef.current === -1) setDragMode(DragMode.NONE);\n            }}\n          ></div>\n          {isSelected ? (\n            <div className={`${styles.keyframeCard}`}>\n              {segment.keyframes.map((keyframe) => {\n                if (segment.keyframes.length > 1) {\n                  return (\n                    <button\n                      style={{\n                        transform: `translateX(${\n                          keyframe.start * scaleFactor\n                        }px) rotate(45deg)`,\n                      }}\n                      className={styles.keyframeBtn}\n                      onClick={(event) => {\n                        event.stopPropagation();\n                        setCurrentTime(segment.start + keyframe.start);\n                      }}\n                      onDoubleClick={(event) => {\n                        event.stopPropagation();\n                      }}\n                    ></button>\n                  );\n                } else {\n                  return '';\n                }\n              })}\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      );\n    }\n\n    return segmentDivs;\n  };\n\n  useEffect(() => {\n    setTrackDivs(\n      trackList.map((track, ind) => (\n        <div className={styles.track}>{genTrack(track, ind)}</div>\n      ))\n    );\n  }, [trackList, selectedSegment, scaleFactor]);\n\n  useEffect(() => {\n    let listener = (event: globalThis.MouseEvent) => {\n      if (event.button === 0 && clickStartTimeRef.current !== -1) {\n        event.stopPropagation();\n        event.preventDefault();\n        setDragMode(DragMode.NONE);\n        clickStartTimeRef.current = -1;\n      }\n    };\n\n    document.addEventListener('mouseup', listener);\n    return () => {\n      document.removeEventListener('mouseup', listener);\n    };\n  }, []);\n\n  const setDragMode = (mode: DragMode) => {\n    dragMode.current = mode;\n\n    if (mode === DragMode.MOVE) {\n      document.body.style.cursor = 'move';\n    } else if (mode === DragMode.TRIM_LEFT) {\n      document.body.style.cursor = 'ew-resize';\n    } else if (mode === DragMode.TRIM_RIGHT) {\n      document.body.style.cursor = 'ew-resize';\n    } else {\n      document.body.style.cursor = '';\n    }\n  };\n\n  const clamp = (value: number, min: number, max: number) => {\n    return Math.max(min, Math.min(max, value));\n  };\n\n  const handleMove = (event: MouseEvent) => {\n    timeout.current = 0;\n    if (\n      selectedSegment === null ||\n      containerRef.current === null ||\n      clickStartTimeRef.current === -1\n    )\n      return;\n\n    const segment = trackList[selectedSegment.track][selectedSegment.index];\n\n    let end =\n      (event.nativeEvent.clientX -\n        containerRef.current.getBoundingClientRect().left +\n        containerRef.current.scrollLeft) /\n      scaleFactor;\n    let change = end - clickStartTimeRef.current;\n    clickStartTimeRef.current = end;\n\n    let y =\n      event.nativeEvent.clientY -\n      containerRef.current.getBoundingClientRect().top +\n      containerRef.current.scrollTop;\n    let track = Math.max(Math.floor((y - 40) / 81), 0);\n\n    if (dragMode.current === DragMode.MOVE) {\n      // Create a new track\n      if (track >= trackList.length - 1) {\n        trackList.push([]);\n        track = trackList.length - 2;\n      }\n\n      let requestedTime = Math.max(end - segmentStartOffsetRef.current, 0);\n      let foundTime = Infinity;\n      let startTime = 0;\n      let endTime = 0;\n\n      // Search for closest opening to the requested time\n      for (let i = 0; i < trackList[track].length + 1; i++) {\n        if (selectedSegment.track === track && selectedSegment.index === i)\n          continue;\n\n        endTime =\n          i < trackList[track].length ? trackList[track][i].start : Infinity;\n\n        if (segment.duration <= endTime - startTime) {\n          if (\n            requestedTime >= startTime &&\n            requestedTime + segment.duration < endTime\n          ) {\n            foundTime = requestedTime;\n            break;\n          }\n\n          let newTime =\n            requestedTime < startTime ? startTime : endTime - segment.duration;\n\n          if (\n            Math.abs(requestedTime - newTime) <\n            Math.abs(requestedTime - foundTime)\n          ) {\n            foundTime = newTime;\n          }\n        }\n\n        if (i < trackList[track].length) {\n          startTime = trackList[track][i].start + trackList[track][i].duration;\n        }\n      }\n\n      // Setup new element for track\n      if (track !== selectedSegment.track) {\n        if (!segment.media.sources.find((source) => source.track === track)) {\n          let newElement =\n            segment.media.sources[0].element.cloneNode() as HTMLVideoElement;\n          newElement.pause();\n          segment.media.sources.push({\n            track: track,\n            element: newElement,\n            inUse: false,\n          });\n        }\n      }\n\n      // Insert new Segment and remove old\n      let newSegment = { ...segment, start: foundTime };\n      let insertedInd = -1;\n      let newTrackList = [];\n      for (let i = 0; i < trackList.length; i++) {\n        let x = [];\n        for (let j = 0; j < trackList[i].length; j++) {\n          if (i === selectedSegment.track && j === selectedSegment.index)\n            continue;\n\n          if (\n            i === track &&\n            insertedInd === -1 &&\n            trackList[i][j].start > foundTime\n          ) {\n            x.push(newSegment);\n            insertedInd = x.length - 1;\n          }\n          x.push(trackList[i][j]);\n        }\n        if (i === track && insertedInd === -1) {\n          x.push(newSegment);\n          insertedInd = x.length - 1;\n        }\n        newTrackList.push(x);\n      }\n\n      while (\n        newTrackList.length > 0 &&\n        newTrackList[newTrackList.length - 1].length === 0\n      )\n        newTrackList.pop();\n      newTrackList.push([]);\n\n      setTrackList(newTrackList);\n      setSelectedSegment({ track: track, index: insertedInd });\n    } else if (dragMode.current === DragMode.TRIM_LEFT) {\n      change = clamp(\n        change,\n        -segment.mediaStart,\n        Math.min(\n          segment.media.sources[0].element.duration * 1000 - segment.mediaStart,\n          segment.duration\n        )\n      );\n\n      if (selectedSegment.index > 0) {\n        change = Math.max(\n          change,\n          -segment.start +\n            trackList[selectedSegment.track][selectedSegment.index - 1].start +\n            trackList[selectedSegment.track][selectedSegment.index - 1].duration\n        );\n      }\n\n      updateSegment(selectedSegment, {\n        ...segment,\n        start: segment.start + change,\n        mediaStart: segment.mediaStart + change,\n        duration: segment.duration - change,\n      });\n    } else if (dragMode.current === DragMode.TRIM_RIGHT) {\n      change = clamp(\n        change,\n        -segment.duration,\n        segment.media.sources[0].element.duration * 1000 -\n          segment.mediaStart -\n          segment.duration\n      );\n\n      if (selectedSegment.index < trackList[selectedSegment.track].length - 1) {\n        change = Math.min(\n          change,\n          trackList[selectedSegment.track][selectedSegment.index + 1].start -\n            segment.start -\n            segment.duration\n        );\n      }\n\n      updateSegment(selectedSegment, {\n        ...segment,\n        duration: segment.duration + change,\n      });\n    }\n  };\n\n  const onMouseMove = (event: MouseEvent) => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (clickStartTimeRef.current !== -1 && timeout.current === 0) {\n      timeout.current = setTimeout(() => {\n        handleMove(event);\n      }, 16) as unknown as number;\n    }\n  };\n\n  return (\n    <div\n      className={styles.container}\n      onClick={() => setSelectedSegment(null)}\n      onMouseMove={onMouseMove}\n      ref={containerRef}\n    >\n      <Droppable droppableId=\"timeline\">\n        {(provided) => (\n          <div\n            className=\"timeline\"\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n          >\n            <div\n              className={styles.tracks}\n              style={{\n                minWidth: `${projectDuration * scaleFactor}px`,\n                minHeight: `${containerRef.current?.clientHeight}px`,\n              }}\n            >\n              {ruler()}\n              <div\n                style={{\n                  transform: `translateX(${currentTime * scaleFactor}px)`,\n                }}\n                className={styles.pointer}\n              >\n                <div className={styles.highlight}></div>\n                <div className={styles.indicator}></div>\n              </div>\n              {trackDivs}\n            </div>\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </div>\n  );\n}\n","import styles from './properties.module.css';\nimport { useEffect, useState } from 'react';\nimport { Segment, SegmentID } from '../../model/types';\nimport { calculateProperties } from '../../utils/utils';\n\nexport default function Properties({\n  trackList,\n  selectedSegment,\n  updateSegment,\n  currentTime,\n  setCurrentTime,\n}: {\n  currentTime: number;\n  trackList: Segment[][];\n  selectedSegment: SegmentID | null;\n  updateSegment: (id: SegmentID, segment: Segment) => void;\n  setCurrentTime: (timestamp: number) => void;\n}) {\n  const segment = !selectedSegment\n    ? null\n    : trackList[selectedSegment.track][selectedSegment.index];\n  const currKeyframe = calculateProperties(segment, currentTime);\n\n  const [posState, setPositionState] = useState<boolean>(false);\n  const [cropState, setCropState] = useState<boolean>(false);\n  const [scaleState, setScaleState] = useState<boolean>(false);\n\n  const checkKeyframeExists = () => {\n    if (!segment) return false;\n\n    for (let i = 0; i < segment.keyframes.length; i++) {\n      if (segment.keyframes[i].start + segment.start === currentTime) {\n        return i; // return index of keyframe if it exists\n      }\n    }\n    return false;\n  };\n\n  const checkPropState = (property: string): boolean => {\n    let currKeyframeIndex = checkKeyframeExists();\n    if (currKeyframeIndex === false) return false;\n    if (!segment) return false;\n\n    if (property === 'position') {\n      if (\n        segment.keyframes[currKeyframeIndex].x !== undefined ||\n        segment.keyframes[currKeyframeIndex].y !== undefined\n      )\n        return true;\n    } else if (property === 'scale') {\n      if (\n        segment.keyframes[currKeyframeIndex].scaleX !== undefined ||\n        segment.keyframes[currKeyframeIndex].scaleY !== undefined\n      )\n        return true;\n    } else if (property === 'crop') {\n      if (\n        segment.keyframes[currKeyframeIndex].trimBottom !== undefined ||\n        segment.keyframes[currKeyframeIndex].trimTop !== undefined ||\n        segment.keyframes[currKeyframeIndex].trimLeft !== undefined ||\n        segment.keyframes[currKeyframeIndex].trimRight !== undefined\n      )\n        return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    setPositionState(checkPropState('position'));\n    setCropState(checkPropState('crop'));\n    setScaleState(checkPropState('scale'));\n  }, [currentTime]);\n\n  const _updateSegment = (\n    args: any,\n    property?: 'position' | 'scale' | 'crop',\n    isButtonPressed?: boolean\n  ) => {\n    if (!segment || !selectedSegment) return false;\n\n    let insertPos = null;\n    for (let i = 0; i < segment.keyframes.length; i++) {\n      if (segment.keyframes[i].start + segment.start >= currentTime) {\n        insertPos = i;\n        break;\n      }\n    }\n\n    if (insertPos === null) insertPos = segment.keyframes.length;\n\n    let currKeyframeIndex = checkKeyframeExists();\n\n    if (segment.keyframes.length === 1 && isButtonPressed === undefined) {\n      currKeyframeIndex = 0;\n    }\n\n    if (segment.keyframes.length > 1 && property === 'position')\n      setPositionState(true);\n    else if (segment.keyframes.length > 1 && property === 'scale')\n      setScaleState(true);\n    else if (segment.keyframes.length > 1 && property === 'crop')\n      setCropState(true);\n\n    if (currKeyframeIndex !== false) {\n      let updatedKeyframe = {\n        ...segment.keyframes[currKeyframeIndex],\n        ...args,\n      };\n\n      let toDelete = true;\n      for (const [key, value] of Object.entries(updatedKeyframe)) {\n        if (key !== 'start' && value !== undefined) {\n          toDelete = false;\n          break;\n        }\n      }\n\n      if (toDelete) {\n        updateSegment(selectedSegment, {\n          ...segment,\n          keyframes: [\n            ...segment.keyframes.slice(0, currKeyframeIndex),\n            ...segment.keyframes.slice(currKeyframeIndex + 1),\n          ],\n        });\n      } else {\n        updateSegment(selectedSegment, {\n          ...segment,\n          keyframes: [\n            ...segment.keyframes.slice(0, currKeyframeIndex),\n            updatedKeyframe,\n            ...segment.keyframes.slice(currKeyframeIndex + 1),\n          ],\n        });\n      }\n    } else {\n      // If no keyframe exists at currentTime\n      updateSegment(selectedSegment, {\n        ...segment,\n        keyframes: [\n          ...segment.keyframes.slice(0, insertPos),\n          {\n            start: currentTime - segment.start,\n            x: args.x,\n            y: args.y,\n            scaleX: args.scaleX,\n            scaleY: args.scaleY,\n            trimLeft: args.trimLeft,\n            trimRight: args.trimRight,\n            trimTop: args.trimTop,\n            trimBottom: args.trimBottom,\n          },\n          ...segment.keyframes.slice(insertPos),\n        ],\n      });\n    }\n  };\n\n  const findNextSetKeyframe = (property: 'position' | 'scale' | 'crop') => {\n    if (!segment) return null;\n\n    for (let i = 0; i < segment.keyframes.length; i++) {\n      if (segment.start + segment.keyframes[i].start > currentTime) {\n        if (property === 'position') {\n          if (\n            segment.keyframes[i].x !== undefined ||\n            segment.keyframes[i].y !== undefined\n          )\n            return i;\n        } else if (property === 'scale') {\n          if (\n            segment.keyframes[i].scaleX !== undefined ||\n            segment.keyframes[i].scaleY !== undefined\n          )\n            return i;\n        } else if (property === 'crop') {\n          if (\n            segment.keyframes[i].trimBottom !== undefined ||\n            segment.keyframes[i].trimTop !== undefined ||\n            segment.keyframes[i].trimLeft !== undefined ||\n            segment.keyframes[i].trimRight !== undefined\n          )\n            return i;\n        }\n      }\n    }\n    return null;\n  };\n\n  const findPrevSetKeyframe = (property: 'position' | 'scale' | 'crop') => {\n    if (!segment) return null;\n\n    for (let i = segment.keyframes.length - 1; i >= 0; i--) {\n      //@ts-ignore\n      if (segment.start + segment.keyframes[i].start < currentTime) {\n        if (property === 'position') {\n          if (\n            segment.keyframes[i].x !== undefined ||\n            segment.keyframes[i].y !== undefined\n          )\n            return i;\n        } else if (property === 'scale') {\n          if (\n            segment.keyframes[i].scaleX !== undefined ||\n            segment.keyframes[i].scaleY !== undefined\n          )\n            return i;\n        } else if (property === 'crop') {\n          if (\n            segment.keyframes[i].trimBottom !== undefined ||\n            segment.keyframes[i].trimTop !== undefined ||\n            segment.keyframes[i].trimLeft !== undefined ||\n            segment.keyframes[i].trimRight !== undefined\n          )\n            return i;\n        }\n      }\n    }\n    return null;\n  };\n\n  return (\n    <fieldset\n      className={`${styles.container} ${selectedSegment ? styles.slideIn : ''}`}\n      disabled={selectedSegment === null}\n    >\n      <h2 className={styles.title}>Effects</h2>\n      <label className={styles.tags}>\n        Position\n        <button\n          className={styles.keyframeNext}\n          onClick={() => {\n            if (!segment) return;\n\n            let nextKeyframeIndex = findNextSetKeyframe('position');\n            setCurrentTime(\n              nextKeyframeIndex == null\n                ? currentTime\n                : segment.start + segment.keyframes[nextKeyframeIndex].start\n            );\n          }}\n        >\n          <span className=\"material-icons\">keyboard_arrow_right</span>\n        </button>\n        <button\n          className={styles.keyframeBtn}\n          onClick={(event) => {\n            event.stopPropagation();\n            if (currentTime === 0) return;\n            if (!posState) {\n              _updateSegment(\n                { x: currKeyframe.x, y: currKeyframe.y },\n                undefined,\n                true\n              );\n            } else {\n              _updateSegment({ x: undefined, y: undefined }, undefined, true);\n            }\n            setPositionState(!posState);\n          }}\n        >\n          <span\n            className=\"material-icons\"\n            style={{ color: posState ? 'red' : 'rgb(102, 102, 102)' }}\n          >\n            circle\n          </span>\n        </button>\n        <button\n          className={styles.keyframePrev}\n          onClick={() => {\n            if (!segment) return;\n\n            let prevKeyframeIndex = findPrevSetKeyframe('position');\n            setCurrentTime(\n              prevKeyframeIndex == null\n                ? currentTime\n                : segment.start + segment.keyframes[prevKeyframeIndex].start\n            );\n          }}\n        >\n          <span className=\"material-icons\">keyboard_arrow_left</span>\n        </button>\n      </label>\n      <span className={styles.effectBox}>\n        <label className={styles.tag}>X </label>\n        <div className={styles.inputTagBox}>\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment({ x: (currKeyframe.x ?? 0) - 10 }, 'position')\n            }\n          >\n            -\n          </button>\n          <input\n            name=\"X\"\n            className={styles.inputTag}\n            type=\"number\"\n            step=\"10\"\n            onChange={(event) =>\n              _updateSegment({ x: +event.target.value }, 'position')\n            }\n            value={currKeyframe.x}\n          />\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment({ x: (currKeyframe.x ?? 0) + 10 }, 'position')\n            }\n          >\n            +\n          </button>\n        </div>\n      </span>\n      <span className={styles.effectBox}>\n        <label className={styles.tag}>Y </label>\n        <div className={styles.inputTagBox}>\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment({ y: (currKeyframe.y ?? 0) - 10 }, 'position')\n            }\n          >\n            -\n          </button>\n          <input\n            name=\"Y\"\n            className={styles.inputTag}\n            type=\"number\"\n            step=\"10\"\n            onChange={(event) =>\n              _updateSegment({ y: +event.target.value }, 'position')\n            }\n            value={currKeyframe.y}\n          />\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment({ y: (currKeyframe.y ?? 0) + 10 }, 'position')\n            }\n          >\n            +\n          </button>\n        </div>\n      </span>\n\n      <label className={styles.tags}>\n        Scale\n        <button\n          className={styles.keyframeNext}\n          onClick={() => {\n            if (!segment) return;\n\n            let nextKeyframeIndex = findNextSetKeyframe('scale');\n            setCurrentTime(\n              nextKeyframeIndex == null\n                ? currentTime\n                : segment.start + segment.keyframes[nextKeyframeIndex].start\n            );\n          }}\n        >\n          <span className=\"material-icons\">keyboard_arrow_right</span>\n        </button>\n        <button\n          className={styles.keyframeBtn}\n          onClick={(event) => {\n            event.stopPropagation();\n            if (currentTime === 0) return;\n            if (!scaleState) {\n              setScaleState(!scaleState);\n              _updateSegment(\n                {\n                  scaleX: currKeyframe.scaleX,\n                  scaleY: currKeyframe.scaleY,\n                },\n                undefined,\n                true\n              );\n            } else {\n              setScaleState(!scaleState);\n              _updateSegment(\n                { scaleX: undefined, scaleY: undefined },\n                undefined,\n                true\n              );\n            }\n          }}\n        >\n          <span\n            className=\"material-icons\"\n            style={{ color: scaleState ? 'red' : 'rgb(102, 102, 102)' }}\n          >\n            circle\n          </span>\n        </button>\n        <button\n          className={styles.keyframePrev}\n          onClick={() => {\n            if (!segment) return;\n\n            let prevKeyframeIndex = findPrevSetKeyframe('scale');\n            setCurrentTime(\n              prevKeyframeIndex == null\n                ? currentTime\n                : segment.start + segment.keyframes[prevKeyframeIndex].start\n            );\n          }}\n        >\n          <span className=\"material-icons\">keyboard_arrow_left</span>\n        </button>\n      </label>\n      <span className={styles.effectBox}>\n        <label className={styles.tag}>X </label>\n        <div className={styles.inputTagBox}>\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                {\n                  scaleX: Math.max(\n                    +((currKeyframe.scaleX ?? 0) - 0.1).toFixed(2),\n                    0\n                  ),\n                },\n                'scale'\n              )\n            }\n          >\n            -\n          </button>\n          <input\n            name=\"height\"\n            className={styles.inputTag}\n            type=\"number\"\n            step=\"0.1\"\n            min=\"0.0\"\n            onChange={(event) =>\n              _updateSegment({ scaleX: +event.target.value }, 'scale')\n            }\n            value={currKeyframe.scaleX}\n          />\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                { scaleX: +((currKeyframe.scaleX ?? 0) + 0.1).toFixed(2) },\n                'scale'\n              )\n            }\n          >\n            +\n          </button>\n        </div>\n      </span>\n      <span className={styles.effectBox}>\n        <label className={styles.tag}>Y </label>\n        <div className={styles.inputTagBox}>\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                {\n                  scaleY: Math.max(\n                    +((currKeyframe.scaleY ?? 0) - 0.1).toFixed(2),\n                    0\n                  ),\n                },\n                'scale'\n              )\n            }\n          >\n            -\n          </button>\n          <input\n            name=\"width\"\n            className={styles.inputTag}\n            type=\"number\"\n            step=\"0.1\"\n            min=\"0.0\"\n            onChange={(event) =>\n              _updateSegment({ scaleY: +event.target.value }, 'scale')\n            }\n            value={currKeyframe.scaleY}\n          />\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                { scaleY: +((currKeyframe.scaleY ?? 0) + 0.1).toFixed(2) },\n                'scale'\n              )\n            }\n          >\n            +\n          </button>\n        </div>\n      </span>\n\n      <label className={styles.tags}>\n        Crop\n        <button\n          className={styles.keyframeNext}\n          onClick={() => {\n            if (!segment) return;\n\n            let nextKeyframeIndex = findNextSetKeyframe('crop');\n            setCurrentTime(\n              nextKeyframeIndex == null\n                ? currentTime\n                : segment.start + segment.keyframes[nextKeyframeIndex].start\n            );\n          }}\n        >\n          <span className=\"material-icons\">keyboard_arrow_right</span>\n        </button>\n        <button\n          className={styles.keyframeBtn}\n          onClick={(event) => {\n            event.stopPropagation();\n            if (currentTime === 0) return;\n\n            if (!cropState) {\n              _updateSegment(\n                {\n                  trimLeft: currKeyframe.trimLeft,\n                  trimRight: currKeyframe.trimRight,\n                  trimTop: currKeyframe.trimTop,\n                  trimBottom: currKeyframe.trimBottom,\n                },\n                undefined,\n                true\n              );\n            } else {\n              _updateSegment(\n                {\n                  trimLeft: undefined,\n                  trimRight: undefined,\n                  trimTop: undefined,\n                  trimBottom: undefined,\n                },\n                undefined,\n                true\n              );\n            }\n            setCropState(!cropState);\n          }}\n        >\n          <span\n            className=\"material-icons\"\n            style={{ color: cropState ? 'red' : 'rgb(102, 102, 102)' }}\n          >\n            circle\n          </span>\n        </button>\n        <button\n          className={styles.keyframePrev}\n          onClick={() => {\n            if (!segment) return;\n\n            let prevKeyframeIndex = findPrevSetKeyframe('crop');\n            setCurrentTime(\n              prevKeyframeIndex == null\n                ? currentTime\n                : segment.start + segment.keyframes[prevKeyframeIndex].start\n            );\n          }}\n        >\n          <span className=\"material-icons\">keyboard_arrow_left</span>\n        </button>\n      </label>\n      <span className={styles.effectBox}>\n        <label className={styles.tag}>Left</label>\n        <div className={styles.inputTagBox}>\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                {\n                  trimLeft: Math.max(\n                    +((currKeyframe.trimLeft ?? 0) - 0.1).toFixed(2),\n                    0\n                  ),\n                },\n                'crop'\n              )\n            }\n          >\n            -\n          </button>\n          <input\n            name=\"Left\"\n            className={styles.inputTag}\n            type=\"number\"\n            step=\"0.1\"\n            min=\"0\"\n            max=\"1.0\"\n            onChange={(event) =>\n              _updateSegment({ trimLeft: +event.target.value }, 'crop')\n            }\n            value={currKeyframe.trimLeft}\n          />\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                {\n                  trimLeft: Math.min(\n                    +((currKeyframe.trimLeft ?? 0) + 0.1).toFixed(2),\n                    1\n                  ),\n                },\n                'crop'\n              )\n            }\n          >\n            +\n          </button>\n        </div>\n      </span>\n      <span className={styles.effectBox}>\n        <label className={styles.tag}>Right</label>\n        <div className={styles.inputTagBox}>\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                {\n                  trimRight: Math.max(\n                    +((currKeyframe.trimRight ?? 0) - 0.1).toFixed(2),\n                    0\n                  ),\n                },\n                'crop'\n              )\n            }\n          >\n            -\n          </button>\n          <input\n            name=\"Right\"\n            className={styles.inputTag}\n            type=\"number\"\n            step=\"0.1\"\n            min=\"0\"\n            max=\"1.0\"\n            onChange={(event) =>\n              _updateSegment({ trimRight: +event.target.value }, 'crop')\n            }\n            value={currKeyframe.trimRight}\n          />\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                {\n                  trimRight: Math.min(\n                    +((currKeyframe.trimRight ?? 0) + 0.1).toFixed(2),\n                    1\n                  ),\n                },\n                'crop'\n              )\n            }\n          >\n            +\n          </button>\n        </div>\n      </span>\n      <span className={styles.effectBox}>\n        <label className={styles.tag}>Top</label>\n        <div className={styles.inputTagBox}>\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                {\n                  trimTop: Math.max(\n                    +((currKeyframe.trimTop ?? 0) - 0.1).toFixed(2),\n                    0\n                  ),\n                },\n                'crop'\n              )\n            }\n          >\n            -\n          </button>\n          <input\n            name=\"Top\"\n            className={styles.inputTag}\n            type=\"number\"\n            step=\"0.1\"\n            min=\"0\"\n            max=\"1.0\"\n            onChange={(event) =>\n              _updateSegment({ trimTop: +event.target.value })\n            }\n            value={currKeyframe.trimTop}\n          />\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                {\n                  trimTop: Math.min(\n                    +((currKeyframe.trimTop ?? 0) + 0.1).toFixed(2),\n                    1\n                  ),\n                },\n                'crop'\n              )\n            }\n          >\n            +\n          </button>\n        </div>\n      </span>\n      <span className={styles.effectBox}>\n        <label className={styles.tag}>Bottom</label>\n        <div className={styles.inputTagBox}>\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                {\n                  trimBottom: Math.max(\n                    +((currKeyframe.trimBottom ?? 0) - 0.1).toFixed(2),\n                    0\n                  ),\n                },\n                'crop'\n              )\n            }\n          >\n            -\n          </button>\n          <input\n            name=\"Bottom\"\n            className={styles.inputTag}\n            type=\"number\"\n            step=\"0.1\"\n            min=\"0\"\n            max=\"1.0\"\n            onChange={(event) =>\n              _updateSegment({ trimBottom: +event.target.value })\n            }\n            value={currKeyframe.trimBottom}\n          />\n          <button\n            className={styles.inputBtn}\n            onClick={() =>\n              _updateSegment(\n                {\n                  trimBottom: Math.min(\n                    +((currKeyframe.trimBottom ?? 0) + 0.1).toFixed(2),\n                    1\n                  ),\n                },\n                'crop'\n              )\n            }\n          >\n            +\n          </button>\n        </div>\n      </span>\n    </fieldset>\n  );\n}\n","import styles from './editor.module.css';\nimport MediaPool from '../components/mediaPool/mediaPool';\nimport Controls from '../components/controls/controls';\nimport MediaPlayer from '../components/mediaPlayer/mediaPlayer';\nimport Actions from '../components/actions/actions';\nimport Timeline from '../components/timeline/timeline';\nimport { Media, Segment, SegmentID } from '../model/types';\nimport { WebGLRenderer } from '../model/webgl';\nimport Properties from '../components/elements/properties';\nimport React, { useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nexport default function Editor(props: {\n  canvasRef: HTMLCanvasElement;\n  mediaList: Media[];\n  setMediaList: (mediaList: Media[]) => void;\n  trackList: Segment[][];\n  setTrackList: (segments: Segment[][]) => void;\n  addVideo: (file: File[]) => void;\n  deleteVideo: (media: Media) => void;\n  playVideo: () => void;\n  pauseVideo: () => void;\n  projectWidth: number;\n  projectHeight: number;\n  renderer: WebGLRenderer;\n  projectFramerate: number;\n  projectDuration: number;\n  isPlaying: boolean;\n  currentTime: number;\n  setCurrentTime: (timestamp: number) => void;\n  dragAndDrop: (media: Media) => void;\n  selectedSegment: SegmentID | null;\n  setSelectedSegment: (selected: SegmentID | null) => void;\n  updateSegment: (id: SegmentID, segment: Segment) => void;\n  splitVideo: (timestamp: number) => void;\n  deleteSelectedSegment: () => void;\n  projectId: string;\n  setProjectId: (id: string) => void;\n  projectUser: string;\n  setProjectUser: (user: string) => void;\n}) {\n  const [scaleFactor, setScaleFactor] = useState<number>(0.1);\n\n  const handleOnDragEnd = (result: any) => {\n    if (!result.destination) return;\n\n    const { source, destination } = result;\n\n    if (source.droppableId === destination.droppableId) {\n      const items = props.mediaList.slice();\n      const [reorderedItem] = items.splice(result.source.index, 1);\n      items.splice(result.destination.index, 0, reorderedItem);\n      props.setMediaList(items);\n    } else {\n      props.dragAndDrop(props.mediaList[result.source.index]);\n      const items = props.mediaList.slice();\n      props.setMediaList(items);\n    }\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleOnDragEnd}>\n      <div className={styles.container}>\n        <MediaPool\n          mediaList={props.mediaList}\n          setMediaList={props.setMediaList}\n          addVideo={props.addVideo}\n          deleteVideo={props.deleteVideo}\n          dragAndDrop={props.dragAndDrop}\n          projectDuration={props.projectDuration}\n        />\n        <MediaPlayer\n          canvasRef={props.canvasRef}\n          projectWidth={props.projectWidth}\n          projectHeight={props.projectHeight}\n        />\n        <Controls\n          playVideo={props.playVideo}\n          pauseVideo={props.pauseVideo}\n          isPlaying={props.isPlaying}\n          currentTime={props.currentTime}\n          projectDuration={props.projectDuration}\n          setCurrentTime={props.setCurrentTime}\n          deleteSelectedSegment={props.deleteSelectedSegment}\n          splitVideo={props.splitVideo}\n          setScaleFactor={setScaleFactor}\n          scaleFactor={scaleFactor}\n        />\n        <Properties\n          trackList={props.trackList}\n          selectedSegment={props.selectedSegment}\n          currentTime={props.currentTime}\n          setCurrentTime={props.setCurrentTime}\n          updateSegment={props.updateSegment}\n        />\n        <Timeline\n          trackList={props.trackList}\n          projectDuration={props.projectDuration}\n          selectedSegment={props.selectedSegment}\n          setSelectedSegment={props.setSelectedSegment}\n          currentTime={props.currentTime}\n          setCurrentTime={props.setCurrentTime}\n          updateSegment={props.updateSegment}\n          scaleFactor={scaleFactor}\n          setTrackList={props.setTrackList}\n        />\n        <Actions\n          projectId={props.projectId}\n          projectUser={props.projectUser}\n          mediaList={props.mediaList}\n          trackList={props.trackList}\n          setProjectUser={props.setProjectUser}\n        />\n      </div>\n    </DragDropContext>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styles from './about.module.css';\n\nexport default function About() {\n  return (\n    <div className={styles.container}>\n      <Link to=\"/\">\n        <span className=\"material-icons\">arrow_back</span>\n      </Link>\n      <h1>About Us</h1>\n      <p>\n        We are a group of developers passionate to bring the best products to\n        consumers.\n      </p>\n      <p>We are constantly testing our products for bugs and issues</p>\n      <p>\n        If you come accross any such bug or just want to give feedback to our\n        team don't hesisate to contact us\n      </p>\n      <br></br>\n      <address>\n        <p>\n          Email Address:\n          <a href=\"mailto:react.editor@gmail.com\">react.editor@gmail.com</a>\n        </p>\n      </address>\n\n      <p>Version 0.1</p>\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styles from './exportPage.module.css';\nimport { useState } from 'react';\n\ndeclare global {\n  interface HTMLCanvasElement {\n    captureStream(frameRate?: number): MediaStream;\n  }\n}\n\nexport default function ExportPage(props: any) {\n  const [load, setLoad] = useState<number>(0);\n\n  function AddProject() {\n    if (props.trackList.length > 1) {\n      var segment;\n      for (var i = 0; i < props.trackList.length; i++) {\n        if (props.trackList[i].length > 0) {\n          segment = props.trackList[i][0];\n        }\n      }\n\n      setLoad(0);\n      if (props.isRecordingRef.current)\n        setLoad(Math.round((100 * props.currentTime) / props.projectDuration));\n\n      return (\n        <div className={styles.mediaList}>\n          <ul className={styles.card}>\n            <li>\n              <div\n                style={{\n                  backgroundImage: `url(${segment.media.thumbnail})`,\n                }}\n                className={styles.imageProperties}\n              ></div>\n              <h3>Untitled</h3>\n              <div className={styles.process}>\n                <label className={styles.render}>Rendering Progress</label>\n                <progress\n                  max=\"100\"\n                  value={load}\n                  className={styles.progressBar}\n                ></progress>\n                <label className={styles.label}>{load}%</label>\n              </div>\n            </li>\n          </ul>\n        </div>\n      );\n    }\n    return <div>No project to export</div>;\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.sidebar}>\n        <div className={styles.vbar}>\n          <Link to=\"/\">\n            <img\n              className={styles.logo}\n              src=\"/logo192.png\"\n            />\n          </Link>\n          <div>\n            <h1>Fire</h1>\n            <p>Video Editor</p>\n          </div>\n        </div>\n        <Link\n          to=\"/projects\"\n          className={styles.btn}\n        >\n          <span className=\"material-icons\">layers</span> Current Projects\n        </Link>\n        <Link\n          to=\"/export\"\n          className={styles.active}\n        >\n          <span className=\"material-icons\">save_alt</span> Exported Files\n        </Link>\n      </div>\n      <button className={styles.downlaod}>\n        <span\n          className=\"material-icons\"\n          onClick={props.Render}\n        >\n          save_alt\n        </span>\n      </button>\n      <div className={styles.main}>\n        <AddProject />\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './login.module.css';\nimport GoogleLogin from 'react-google-login';\nimport { gapi } from 'gapi-script';\nimport instance from '../api';\n\nexport default function Login(props: {\n  projectUser: string;\n  setProjectUser: (user: string) => void;\n}) {\n  const unsuccessfulLogin = (response: any) => {\n    console.log(response);\n    console.log('Login process terminated');\n  };\n\n  const handleLogin = (response: any) => {\n    sessionStorage.setItem('token', response.tokenId);\n    instance.get('/getEmail').then((res) => {\n      props.setProjectUser(res.data.email);\n    });\n  };\n  useEffect(() => {\n    function start() {\n      gapi.client.init({\n        clientId:\n          '1010611727033-t5uiv067a9db9j900i9lnpqi3jncmtlt.apps.googleusercontent.com',\n        scope: '',\n      });\n    }\n    gapi.load('client:auth2', start);\n  });\n  return (\n    <div className={styles.container}>\n      <div></div>\n      <div className={styles.login}>\n        <div className={styles.loginBox}>\n          <Link to=\"/\">\n            <img\n              className={styles.logo}\n              src=\"/logo192.png\"\n            />\n          </Link>\n          <GoogleLogin\n            clientId=\"1010611727033-t5uiv067a9db9j900i9lnpqi3jncmtlt.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <button\n                className={styles.button}\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                title=\"Sign in with Google\"\n              >\n                <img\n                  className={styles.google}\n                  src=\"/google.svg\"\n                />\n                Sign in with Google\n              </button>\n            )}\n            buttonText=\"Login\"\n            onSuccess={handleLogin}\n            onFailure={unsuccessfulLogin}\n            cookiePolicy={'single_host_origin'}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styles from './projects.module.css';\nimport { useState } from 'react';\nimport { Project } from '../model/types';\nimport { useHistory } from 'react-router-dom';\nimport instance from '../api';\n\nexport default function Projects(props: {\n  projectUser: string;\n  projects: Project[];\n  setProjects: (projects: Project[]) => void;\n}) {\n  const history = useHistory();\n  function modifyProject(event: any) {\n    event.preventDefault();\n    if (!modifyingProject) return;\n    if (modifyingProject._id !== '') {\n      instance.put('/editProject', modifyingProject).then(() => {\n        setModifyingProject(null);\n      });\n      let newProjects = [];\n      for (const proj of props.projects) {\n        if (proj._id === modifyingProject._id) {\n          newProjects.push(modifyingProject);\n        } else {\n          newProjects.push(proj);\n        }\n      }\n      props.setProjects(newProjects);\n    } else {\n      instance.put('/addProject', modifyingProject).then((res) => {\n        props.setProjects([...props.projects, res.data]);\n        setModifyingProject(null);\n      });\n    }\n  }\n  function deleteProject(id: string) {\n    instance.delete(`/deleteProject/${id}`).then(() => {\n      props.setProjects(props.projects.filter((item) => item._id !== id));\n    });\n  }\n  const [modifyingProject, setModifyingProject] = useState<Project | null>(\n    null\n  );\n  const NewProject = () => {\n    if (!modifyingProject) return;\n    return (\n      <div className={styles.popup}>\n        <div\n          id=\"project\"\n          className={styles.popupContainer}\n        >\n          <h2>{modifyingProject._id === '' ? 'Create' : 'Modify'} Project </h2>\n          <button\n            className={styles.popupClose}\n            onClick={() => {\n              setModifyingProject(null);\n            }}\n          >\n            <span className=\"material-icons\">close</span>\n          </button>\n          <form onSubmit={modifyProject}>\n            <div>\n              <label>Name: </label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                required\n                value={modifyingProject.name}\n                onChange={(event) => {\n                  setModifyingProject({\n                    ...modifyingProject,\n                    name: event.target.value,\n                  });\n                }}\n              ></input>\n            </div>\n            <div>\n              <label>Framerate: </label>\n              <input\n                type=\"number\"\n                id=\"frame\"\n                name=\"frame\"\n                min=\"1\"\n                required\n                value={modifyingProject.framerate}\n                onChange={(event) => {\n                  setModifyingProject({\n                    ...modifyingProject,\n                    framerate: +event.target.value,\n                  });\n                }}\n              ></input>\n            </div>\n            <div>\n              <label>Width: </label>\n              <input\n                type=\"number\"\n                id=\"width\"\n                name=\"width\"\n                min=\"1\"\n                required\n                value={modifyingProject.width}\n                onChange={(event) => {\n                  setModifyingProject({\n                    ...modifyingProject,\n                    width: +event.target.value,\n                  });\n                }}\n              ></input>\n            </div>\n            <div>\n              <label>Height: </label>\n              <input\n                type=\"number\"\n                id=\"height\"\n                name=\"height\"\n                min=\"1\"\n                required\n                value={modifyingProject.height}\n                onChange={(event) => {\n                  setModifyingProject({\n                    ...modifyingProject,\n                    height: +event.target.value,\n                  });\n                }}\n              ></input>\n            </div>\n            <div>\n              <button type=\"submit\">\n                <span className=\"material-icons\">send</span>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.sidebar}>\n        <div className={styles.vbar}>\n          <Link to=\"/\">\n            <img\n              className={styles.logo}\n              src=\"/logo192.png\"\n            />\n          </Link>\n          <div>\n            <h1>Fire</h1>\n            <p>Video Editor</p>\n          </div>\n        </div>\n        <Link\n          to=\"/projects\"\n          className={styles.active}\n        >\n          <span className=\"material-icons\">layers</span> Current Projects\n        </Link>\n        <Link\n          to=\"/export\"\n          className={styles.btn}\n        >\n          <span className=\"material-icons\">save_alt</span> Exported Files\n        </Link>\n      </div>\n\n      <div className={styles.main}>\n        {props.projects.map((project, index) => {\n          return (\n            <div\n              className={styles.projectBox}\n              style={{\n                backgroundImage: `url()`,\n              }}\n              onClick={() => {\n                history.push('/editor');\n              }}\n            >\n              <div className={styles.boxShadow}>\n                <h2>{project.name}</h2>\n                <button\n                  onClick={(evt) => {\n                    evt.stopPropagation();\n                    setModifyingProject({ ...project });\n                  }}\n                >\n                  <span className=\"material-icons\">mode</span>\n                </button>\n                <button\n                  onClick={(evt) => {\n                    evt.stopPropagation();\n                    deleteProject(project._id);\n                  }}\n                >\n                  <span className=\"material-icons\">delete</span>\n                </button>\n              </div>\n            </div>\n          );\n        })}\n        {modifyingProject != null ? NewProject() : null}\n      </div>\n      <button\n        className={styles.new}\n        onClick={() =>\n          setModifyingProject({\n            _id: '',\n            name: '',\n            width: 1920,\n            height: 1080,\n            framerate: 30,\n            duration: 0,\n          })\n        }\n      >\n        <span className=\"material-icons\">add</span>\n      </button>\n    </div>\n  );\n}\n","import Editor from '../routes/editor';\nimport { Media, Project, Segment, SegmentID, Source } from './types';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { WebGLRenderer } from './webgl';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport About from '../routes/about';\nimport ExportPage from '../routes/exportPage';\nimport Login from '../routes/login';\nimport Projects from '../routes/projects';\n\nexport default function PlaybackController(props: {\n  setProjects: (projects: Project[]) => void;\n  projects: Project[];\n  projectUser: string;\n  setProjectUser: (user: string) => void;\n  canvasRef: HTMLCanvasElement;\n  mediaList: Media[];\n  setMediaList: (mediaList: Media[]) => void;\n  trackList: Segment[][];\n  setTrackList: (segments: Segment[][]) => void;\n  addVideo: (file: File[]) => void;\n  deleteVideo: (media: Media) => void;\n  renderer: WebGLRenderer;\n  dragAndDrop: (media: Media) => void;\n  setSelectedSegment: (selected: SegmentID | null) => void;\n  selectedSegment: SegmentID | null;\n  updateSegment: (id: SegmentID, segment: Segment) => void;\n  splitVideo: (timestamp: number) => void;\n  deleteSelectedSegment: () => void;\n  projectWidth: number;\n  projectHeight: number;\n  projectFramerate: number;\n  projectDuration: number;\n  projectId: string;\n  setProjectId: (id: string) => void;\n  setProjectDuration: (duration: number) => void;\n}) {\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\n  const isRecordingRef = useRef(false);\n  const [currentTime, _setCurrentTime] = useState<number>(0);\n  const trackListRef = useRef(props.trackList);\n  const playbackStartTimeRef = useRef(0);\n  const lastPlaybackTimeRef = useRef(0);\n  const projectDurationRef = useRef(0);\n  const mediaListRef = useRef<Media[]>([]);\n  const isPlayingRef = useRef(false);\n  const SKIP_THREASHOLD = 100;\n  let recordedChunks: Array<any>;\n  const mediaRecorderRef = useRef<MediaRecorder>();\n\n  trackListRef.current = props.trackList;\n  projectDurationRef.current = props.projectDuration;\n  mediaListRef.current = props.mediaList;\n  isPlayingRef.current = isPlaying;\n\n  const setCurrentTime = (timestamp: number) => {\n    lastPlaybackTimeRef.current = timestamp;\n    playbackStartTimeRef.current = performance.now();\n    _setCurrentTime(timestamp);\n    if (!isPlayingRef.current) renderFrame(false);\n  };\n\n  useEffect(() => {\n    if (!isPlayingRef.current) renderFrame(false);\n  }, [props.trackList]);\n\n  useEffect(() => {\n    if (currentTime > props.projectDuration)\n      setCurrentTime(props.projectDuration);\n  }, [props.projectDuration]);\n\n  const renderFrame = async (update: boolean) => {\n    let curTime =\n      performance.now() -\n      playbackStartTimeRef.current +\n      lastPlaybackTimeRef.current;\n    if (!update) curTime = lastPlaybackTimeRef.current;\n    if (curTime >= projectDurationRef.current)\n      curTime = projectDurationRef.current;\n    _setCurrentTime(curTime);\n\n    for (const media of mediaListRef.current) {\n      for (const source of media.sources) {\n        source.inUse = false;\n      }\n    }\n\n    let segments: Segment[] = [];\n    let elements: HTMLVideoElement[] = [];\n    let needsSeek = false;\n\n    for (let i = trackListRef.current.length - 1; i >= 0; i--) {\n      for (let j = 0; j < trackListRef.current[i].length; j++) {\n        const segment = trackListRef.current[i][j];\n        if (\n          curTime >= segment.start &&\n          curTime < segment.start + segment.duration\n        ) {\n          let source = segment.media.sources.find(\n            (source) => source.track === i\n          ) as Source;\n          source.inUse = true;\n          let mediaTime = curTime - segment.start + segment.mediaStart;\n          if (\n            Math.abs(source.element.currentTime * 1000 - mediaTime) >\n              SKIP_THREASHOLD ||\n            source.element.paused\n          )\n            needsSeek = true;\n          segments.push(segment);\n          elements.push(source.element);\n        }\n      }\n    }\n\n    for (const media of mediaListRef.current) {\n      for (const source of media.sources) {\n        if (!source.inUse) {\n          source.element.pause();\n          source.inUse = true;\n        }\n      }\n    }\n\n    if (needsSeek) {\n      if (isRecordingRef.current) {\n        if (mediaRecorderRef.current != null) mediaRecorderRef.current.pause();\n      }\n      for (let i = 0; i < segments.length; i++) {\n        const segment = segments[i];\n\n        elements[i].pause();\n        let mediaTime = (curTime - segment.start + segment.mediaStart) / 1000;\n\n        if (elements[i].currentTime !== mediaTime) {\n          await new Promise<void>((resolve, reject) => {\n            elements[i].onseeked = () => resolve();\n            elements[i].currentTime = mediaTime;\n          });\n        }\n      }\n      try {\n        await Promise.allSettled(elements.map((element) => element.play()));\n      } catch (error) {}\n      lastPlaybackTimeRef.current = curTime;\n      playbackStartTimeRef.current = performance.now();\n      if (isRecordingRef.current) {\n        if (mediaRecorderRef.current != null) mediaRecorderRef.current.resume();\n      }\n    }\n\n    props.renderer.drawSegments(segments, elements, curTime);\n\n    if (!isPlayingRef.current) {\n      for (const element of elements) {\n        element.pause();\n      }\n      return;\n    }\n\n    if (curTime === projectDurationRef.current) {\n      pause();\n      if (isRecordingRef.current) {\n        if (mediaRecorderRef.current != null) mediaRecorderRef.current.stop();\n        isRecordingRef.current = false;\n      }\n      return;\n    }\n\n    setTimeout(() => {\n      renderFrame(true);\n    }, 1 / props.projectFramerate) as unknown as number;\n  };\n\n  const play = async () => {\n    if (currentTime >= projectDurationRef.current) return;\n\n    setIsPlaying(true);\n    lastPlaybackTimeRef.current = currentTime;\n    playbackStartTimeRef.current = performance.now();\n    isPlayingRef.current = true;\n\n    renderFrame(true);\n  };\n\n  const pause = () => {\n    setIsPlaying(false);\n  };\n\n  function Render() {\n    let canvas: HTMLCanvasElement | null = props.canvasRef;\n\n    // Optional frames per second argument.\n    if (canvas != null) {\n      let stream = canvas.captureStream(props.projectFramerate);\n      recordedChunks = [];\n      let options = { mimeType: 'video/webm; codecs=vp9' };\n      mediaRecorderRef.current = new MediaRecorder(stream, options);\n      mediaRecorderRef.current.ondataavailable = handleDataAvailable;\n      mediaRecorderRef.current.onstop = download;\n      setCurrentTime(0);\n      isRecordingRef.current = true;\n      mediaRecorderRef.current.start();\n      setIsPlaying(true);\n      renderFrame(true);\n    }\n  }\n\n  function handleDataAvailable(event: any) {\n    if (event.data.size > 0) {\n      recordedChunks.push(event.data);\n    }\n  }\n\n  function download() {\n    var blob = new Blob(recordedChunks, {\n      type: 'video/webm',\n    });\n    var url = URL.createObjectURL(blob);\n    var a = document.createElement('a');\n    document.body.appendChild(a);\n    a.href = url;\n    a.download = 'test.webm';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/export\">\n          <ExportPage\n            Render={Render}\n            setCurrentTime={setCurrentTime}\n            trackList={props.trackList}\n            projectDuration={props.projectDuration}\n            currentTime={currentTime}\n            isRecordingRef={isRecordingRef}\n          ></ExportPage>\n        </Route>\n        <Route path=\"/about\">\n          <About></About>\n        </Route>\n        <Route path=\"/projects\">\n          {props.projectUser != '' ? (\n            <Projects\n              projectUser={props.projectUser}\n              projects={props.projects}\n              setProjects={props.setProjects}\n            />\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </Route>\n        <Route path=\"/editor\">\n          {props.projectUser != '' ? (\n            <Editor\n              {...props}\n              playVideo={play}\n              pauseVideo={pause}\n              isPlaying={isPlaying}\n              currentTime={currentTime}\n              setCurrentTime={setCurrentTime}\n            />\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </Route>\n        <Route path=\"/\">\n          {props.projectUser === '' ? (\n            <Login\n              projectUser={props.projectUser}\n              setProjectUser={props.setProjectUser}\n            />\n          ) : (\n            <Redirect to=\"/projects\" />\n          )}\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","import { m4 } from 'twgl.js';\nimport { calculateProperties } from '../utils/utils';\nimport { FRAGMENT_SHADER, VERTEX_SHADER } from './shaders';\nimport { KeyFrame, Segment } from './types';\n\nexport class WebGLRenderer {\n  context: WebGLRenderingContext;\n  program: WebGLProgram;\n\n  positionLocation: number;\n  texcoordLocation: number;\n\n  matrixLocation: WebGLUniformLocation;\n  textureLocation: WebGLUniformLocation;\n\n  positionBuffer: WebGLBuffer;\n  texcoordBuffer: WebGLBuffer;\n\n  constructor(\n    public canvas: HTMLCanvasElement,\n    public projectWidth: number,\n    public projectHeight: number\n  ) {\n    this.context = canvas.getContext('webgl') as WebGLRenderingContext;\n    if (!this.context) console.error('Failed to get webgl context!');\n\n    // setup GLSL program\n    this.program = this.context.createProgram() as WebGLProgram;\n\n    this.context.attachShader(\n      this.program,\n      this.loadShader(VERTEX_SHADER, this.context.VERTEX_SHADER) as WebGLShader\n    );\n    this.context.attachShader(\n      this.program,\n      this.loadShader(\n        FRAGMENT_SHADER,\n        this.context.FRAGMENT_SHADER\n      ) as WebGLShader\n    );\n\n    this.context.linkProgram(this.program);\n    const linked = this.context.getProgramParameter(\n      this.program,\n      this.context.LINK_STATUS\n    );\n\n    if (!linked) {\n      console.error(\n        'Error in program linking:' +\n          this.context.getProgramInfoLog(this.program)\n      );\n      this.context.deleteProgram(this.program);\n    }\n\n    this.context.useProgram(this.program);\n\n    // look up where the vertex data needs to go.\n    this.positionLocation = this.context.getAttribLocation(\n      this.program,\n      'a_position'\n    );\n    this.texcoordLocation = this.context.getAttribLocation(\n      this.program,\n      'a_texcoord'\n    );\n\n    // lookup uniforms\n    this.matrixLocation = this.context.getUniformLocation(\n      this.program,\n      'u_matrix'\n    ) as WebGLUniformLocation;\n    this.textureLocation = this.context.getUniformLocation(\n      this.program,\n      'u_texture'\n    ) as WebGLUniformLocation;\n\n    // Create a buffer to put three 2d clip space points in\n    this.positionBuffer = this.context.createBuffer() as WebGLBuffer;\n    this.context.bindBuffer(this.context.ARRAY_BUFFER, this.positionBuffer);\n    // Put a unit quad in the buffer\n    let positions = [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1];\n    this.context.bufferData(\n      this.context.ARRAY_BUFFER,\n      new Float32Array(positions),\n      this.context.STATIC_DRAW\n    );\n\n    // Create a buffer for texture coords\n    this.texcoordBuffer = this.context.createBuffer() as WebGLBuffer;\n    this.context.bindBuffer(this.context.ARRAY_BUFFER, this.texcoordBuffer);\n\n    // Put texcoords in the buffer\n    let texcoords = [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1];\n    this.context.bufferData(\n      this.context.ARRAY_BUFFER,\n      new Float32Array(texcoords),\n      this.context.STATIC_DRAW\n    );\n  }\n\n  public drawSegments(\n    segments: Segment[],\n    elements: HTMLVideoElement[],\n    timestamp: number\n  ) {\n    // Tell WebGL how to convert from clip space to pixels\n    this.context.viewport(0, 0, this.projectWidth, this.projectHeight);\n    this.context.clear(this.context.COLOR_BUFFER_BIT);\n\n    for (let i = 0; i < segments.length; i++) {\n      this.drawImage(\n        segments[i],\n        elements[i],\n        calculateProperties(segments[i], timestamp)\n      );\n    }\n\n    this.context.flush();\n  }\n\n  private loadShader(shaderSource: string, shaderType: number) {\n    // Create the shader object\n    const shader = this.context.createShader(shaderType) as WebGLShader;\n\n    // Load the shader source\n    this.context.shaderSource(shader, shaderSource);\n\n    // Compile the shader\n    this.context.compileShader(shader);\n\n    // Check the compile status\n    const compiled = this.context.getShaderParameter(\n      shader,\n      this.context.COMPILE_STATUS\n    );\n\n    if (!compiled) {\n      // Something went wrong during compilation; get the error\n      const lastError = this.context.getShaderInfoLog(shader);\n\n      console.error(\n        \"*** Error compiling shader '\" +\n          shader +\n          \"':\" +\n          lastError +\n          `\\n` +\n          shaderSource\n            .split('\\n')\n            .map((l, i) => `${i + 1}: ${l}`)\n            .join('\\n')\n      );\n\n      this.context.deleteShader(shader);\n      return null;\n    }\n\n    return shader;\n  }\n\n  // creates a texture info { width: w, height: h, texture: tex }\n  // The texture will start with 1x1 pixels and be updated\n  // when the image has loaded\n  createTexture() {\n    let tex = this.context.createTexture() as WebGLTexture;\n    this.context.bindTexture(this.context.TEXTURE_2D, tex);\n    // Fill the texture with a 1x1 blue pixel.\n    this.context.texImage2D(\n      this.context.TEXTURE_2D,\n      0,\n      this.context.RGBA,\n      1,\n      1,\n      0,\n      this.context.RGBA,\n      this.context.UNSIGNED_BYTE,\n      new Uint8Array([0, 0, 255, 255])\n    );\n\n    // let's assume all images are not a power of 2\n    this.context.texParameteri(\n      this.context.TEXTURE_2D,\n      this.context.TEXTURE_WRAP_S,\n      this.context.CLAMP_TO_EDGE\n    );\n    this.context.texParameteri(\n      this.context.TEXTURE_2D,\n      this.context.TEXTURE_WRAP_T,\n      this.context.CLAMP_TO_EDGE\n    );\n    this.context.texParameteri(\n      this.context.TEXTURE_2D,\n      this.context.TEXTURE_MIN_FILTER,\n      this.context.LINEAR\n    );\n    return tex;\n  }\n\n  // Unlike images, textures do not have a width and height associated\n  // with them so we'll pass in the width and height of the texture\n  private drawImage(\n    segment: Segment,\n    element: HTMLVideoElement,\n    properties: KeyFrame\n  ) {\n    if (\n      (properties.scaleX as number) <= 0 ||\n      (properties.scaleY as number) <= 0 ||\n      (properties.trimLeft as number) + (properties.trimRight as number) >= 1 ||\n      (properties.trimTop as number) + (properties.trimBottom as number) >= 1\n    ) {\n      return;\n    }\n    this.context.bindTexture(this.context.TEXTURE_2D, segment.texture);\n    this.context.texImage2D(\n      this.context.TEXTURE_2D,\n      0,\n      this.context.RGBA,\n      this.context.RGBA,\n      this.context.UNSIGNED_BYTE,\n      element\n    );\n\n    // Tell WebGL to use our shader program pair\n    this.context.useProgram(this.program);\n\n    // Setup the attributes to pull data from our buffers\n    this.context.bindBuffer(this.context.ARRAY_BUFFER, this.positionBuffer);\n    this.context.enableVertexAttribArray(this.positionLocation);\n    this.context.vertexAttribPointer(\n      this.positionLocation,\n      2,\n      this.context.FLOAT,\n      false,\n      0,\n      0\n    );\n\n    // Begin Crop\n    this.context.bindBuffer(this.context.ARRAY_BUFFER, this.texcoordBuffer);\n\n    // Put texcoords in the buffer\n    let texcoords = [\n      0 + (properties.trimLeft as number),\n      0 + (properties.trimTop as number),\n      1 - (properties.trimRight as number),\n      1 - (properties.trimBottom as number),\n      1 - (properties.trimRight as number),\n      0 + (properties.trimTop as number),\n      0 + (properties.trimLeft as number),\n      0 + (properties.trimTop as number),\n      0 + (properties.trimLeft as number),\n      1 - (properties.trimBottom as number),\n      1 - (properties.trimRight as number),\n      1 - (properties.trimBottom as number),\n    ];\n    this.context.bufferData(\n      this.context.ARRAY_BUFFER,\n      new Float32Array(texcoords),\n      this.context.STATIC_DRAW\n    );\n    // End Crop\n\n    this.context.enableVertexAttribArray(this.texcoordLocation);\n    this.context.vertexAttribPointer(\n      this.texcoordLocation,\n      2,\n      this.context.FLOAT,\n      false,\n      0,\n      0\n    );\n\n    // this matirx will convert from pixels to clip space\n    let matrix = m4.ortho(\n      0,\n      this.context.canvas.width,\n      this.context.canvas.height,\n      0,\n      -1,\n      1\n    );\n\n    let newWidth = element.videoWidth * (properties.scaleX as number);\n    let newHeight = element.videoHeight * (properties.scaleY as number);\n\n    // this matrix will translate our quad to dstX, dstY\n\n    matrix = m4.translate(matrix, [\n      this.projectWidth / 2 +\n        ((properties.x as number) - newWidth / 2) +\n        newWidth * (properties.trimLeft as number),\n      this.projectHeight / 2 +\n        ((properties.y as number) - newHeight / 2) +\n        newHeight * (properties.trimTop as number),\n      0,\n      0,\n    ]);\n\n    // this matrix will scale our 1 unit quad\n    // from 1 unit to texWidth, texHeight units\n    matrix = m4.scale(matrix, [\n      newWidth *\n        (1 -\n          (properties.trimRight as number) -\n          (properties.trimLeft as number)),\n      newHeight *\n        (1 -\n          (properties.trimTop as number) -\n          (properties.trimBottom as number)),\n      0,\n      0,\n    ]);\n\n    // Set the matrix.\n    this.context.uniformMatrix4fv(this.matrixLocation, false, matrix);\n\n    // Tell the shader to get the texture from texture unit 0\n    this.context.uniform1i(this.textureLocation, 0);\n\n    // draw the quad (2 triangles, 6 vertices)\n    this.context.drawArrays(this.context.TRIANGLES, 0, 6);\n  }\n}\n","export let VERTEX_SHADER = `\n    attribute vec4 a_position;\n    attribute vec2 a_texcoord;\n\n    uniform mat4 u_matrix;\n\n    varying vec2 v_texcoord;\n\n    void main() {\n        gl_Position = u_matrix * a_position;\n        v_texcoord = a_texcoord;\n    }\n`;\n\nexport let FRAGMENT_SHADER = `\n    precision mediump float;\n\n    uniform sampler2D u_texture;\n\n    varying vec2 v_texcoord;\n\n    void main() {\n       gl_FragColor = texture2D(u_texture, v_texcoord);\n    }\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { calculateProperties } from '../utils/utils';\nimport PlaybackController from './playbackController';\nimport { Media, Project, Segment, SegmentID } from './types';\nimport { WebGLRenderer } from './webgl';\n\nexport default function MediaManager(props: {\n  setProjects: (projects: Project[]) => void;\n  projects: Project[];\n  projectUser: string;\n  setProjectUser: (user: string) => void;\n  projectHeight: number;\n  setProjectHeight: (height: number) => void;\n  projectWidth: number;\n  setProjectWidth: (width: number) => void;\n  projectFramerate: number;\n  setProjectFramerate: (framerate: number) => void;\n  projectName: string;\n  setProjectName: (name: string) => void;\n  projectId: string;\n  setProjectId: (id: string) => void;\n  projectDuration: number;\n  setProjectDuration: (duration: number) => void;\n}) {\n  const [mediaList, setMediaList] = useState<Media[]>([]);\n  const [trackList, setTrackList] = useState<Segment[][]>([[]]);\n  const [selectedSegment, setSelectedSegment] = useState<SegmentID | null>(\n    null\n  );\n  const [canvasRef, setCanvasRef] = useState<HTMLCanvasElement>(\n    document.createElement('canvas')\n  );\n  const [renderer, setRenderer] = useState<WebGLRenderer>(\n    new WebGLRenderer(canvasRef, props.projectWidth, props.projectHeight)\n  );\n\n  useEffect(() => {\n    canvasRef.width = props.projectWidth;\n    canvasRef.height = props.projectHeight;\n  }, [canvasRef, props.projectHeight, props.projectWidth]);\n\n  useEffect(() => {\n    let duration = 0;\n    for (const track of trackList) {\n      if (track.length === 0) continue;\n      duration = Math.max(\n        duration,\n        track[track.length - 1].start + track[track.length - 1].duration\n      );\n    }\n\n    props.setProjectDuration(duration);\n  }, [trackList]);\n\n  const thumbnailCanvas = document.createElement('canvas');\n  const thumbnailCanvasContext = thumbnailCanvas.getContext(\n    '2d'\n  ) as CanvasRenderingContext2D;\n\n  const generateThumbnail = async (file: File) => {\n    let elm = document.createElement('video') as HTMLVideoElement;\n    elm.preload = 'auto';\n\n    await new Promise<void>((resolve, reject) => {\n      elm.onloadeddata = () => resolve();\n      elm.src = URL.createObjectURL(file);\n      elm.currentTime = 0.0001;\n    });\n\n    // Generate Thumbnail\n    thumbnailCanvas.width = elm.videoWidth;\n    thumbnailCanvas.height = elm.videoHeight;\n    thumbnailCanvasContext.drawImage(\n      elm,\n      0,\n      0,\n      elm.videoWidth,\n      elm.videoHeight\n    );\n\n    let media: Media = {\n      sources: [{ track: 0, element: elm, inUse: false }],\n      file: file,\n      thumbnail: thumbnailCanvas.toDataURL(),\n    };\n\n    return media;\n  };\n\n  const addVideo = async (files: File[]) => {\n    let uniqueFiles: File[] = [];\n    let found = false;\n    for (let file of files) {\n      for (let i = 0; i < mediaList.length; i++) {\n        if (mediaList[i].file.name === file.name) {\n          found = true;\n          break;\n        }\n      }\n      if (found) continue;\n      uniqueFiles.push(file);\n    }\n\n    let filesList: Media[] = [];\n\n    for (let file of uniqueFiles) {\n      filesList.push(await generateThumbnail(file));\n    }\n\n    setMediaList([...mediaList, ...filesList]);\n\n    console.log('Sucessfully Loaded Segment Thumbnail!');\n    return;\n  };\n\n  const dragAndDrop = (media: Media) => {\n    if (renderer == null) return;\n    let segment: Segment = {\n      media: media,\n      start: 0,\n      duration: media.sources[0].element.duration * 1000,\n      mediaStart: 0,\n      texture: renderer.createTexture(),\n      keyframes: [\n        {\n          start: 0,\n          x: 0,\n          y: 0,\n          trimRight: 0,\n          trimLeft: 0,\n          trimTop: 0,\n          trimBottom: 0,\n          scaleX: 1.0,\n          scaleY: 1.0,\n        },\n      ],\n    };\n\n    let newElement = media.sources[0].element.cloneNode() as HTMLVideoElement;\n    newElement.pause();\n\n    if (trackList[trackList.length - 1].length === 0) {\n      if (\n        !media.sources.find((source) => source.track === trackList.length - 1)\n      )\n        media.sources.push({\n          track: trackList.length - 1,\n          element: newElement,\n          inUse: false,\n        });\n      setTrackList([\n        ...trackList.slice(0, trackList.length - 1),\n        [segment],\n        [],\n      ]);\n    } else {\n      media.sources.push({\n        track: trackList.length,\n        element: newElement,\n        inUse: false,\n      });\n      setTrackList([...trackList, [segment], []]);\n    }\n  };\n\n  const deleteVideo = (media: Media) => {\n    for (const source of media.sources) {\n      source.element.pause();\n    }\n\n    if (\n      selectedSegment &&\n      trackList[selectedSegment.track][selectedSegment.index].media === media\n    )\n      setSelectedSegment(null);\n    setMediaList(mediaList.filter((item) => item !== media));\n\n    let newTrackList = trackList.map((track) =>\n      track.filter((segment) => segment.media !== media)\n    );\n\n    // Clean Tracklist\n    while (\n      newTrackList.length > 0 &&\n      newTrackList[newTrackList.length - 1].length === 0\n    )\n      newTrackList.pop();\n    newTrackList.push([]);\n\n    setTrackList(newTrackList);\n  };\n\n  const deleteSelectedSegment = () => {\n    if (selectedSegment === null) return;\n\n    for (const source of trackList[selectedSegment.track][selectedSegment.index]\n      .media.sources) {\n      source.element.pause();\n    }\n\n    let newTrackList = [\n      ...trackList.slice(0, selectedSegment.track),\n      [\n        ...trackList[selectedSegment.track].slice(0, selectedSegment.index),\n        ...trackList[selectedSegment.track].slice(selectedSegment.index + 1),\n      ],\n      ...trackList.slice(selectedSegment.track + 1),\n    ];\n\n    // Clean Tracklist\n    while (\n      newTrackList.length > 0 &&\n      newTrackList[newTrackList.length - 1].length === 0\n    )\n      newTrackList.pop();\n    newTrackList.push([]);\n\n    setTrackList(newTrackList);\n    setSelectedSegment(null);\n  };\n\n  const split = (timestamp: number) => {\n    if (selectedSegment === null) return;\n\n    const segment = trackList[selectedSegment.track][selectedSegment.index];\n\n    if (\n      segment.start > timestamp ||\n      segment.start + segment.duration < timestamp\n    )\n      return;\n\n    // Find index of current keyframe at timestamp\n    // There is always at least 1 keyframe in a segment\n\n    let segmentTimeCut = timestamp - segment.start;\n    let lenKeyframes = segment.keyframes.length;\n    let keyFrameIndex = 0;\n    for (let i = 1; i < lenKeyframes; i++) {\n      let checkKeyframe = segment.keyframes[i];\n      if (checkKeyframe.start > segmentTimeCut) {\n        break;\n      }\n      keyFrameIndex = i;\n    }\n\n    let interpKeyFrame = calculateProperties(segment, timestamp);\n\n    // Remove remaining keyframes from split segment\n    let leftSegmentKeyFrames = segment.keyframes.slice(0, keyFrameIndex + 1);\n    // Move remaining keyframes to new split segment\n    let rightSegmentKeyFrames = segment.keyframes.slice(\n      keyFrameIndex + 1,\n      lenKeyframes\n    );\n\n    // Edit new keyframes to new offset\n    for (let i = 0; i < rightSegmentKeyFrames.length; i++) {\n      rightSegmentKeyFrames[i].start -= segmentTimeCut;\n    }\n\n    // Add interpolated keyframe at the end of the selected split segement\n    let newInterpKeyFrame = {\n      ...interpKeyFrame,\n      start: segmentTimeCut - 1 / props.projectFramerate,\n    };\n    leftSegmentKeyFrames.push(newInterpKeyFrame);\n\n    setTrackList([\n      ...trackList.slice(0, selectedSegment.track),\n      [\n        ...trackList[selectedSegment.track].slice(0, selectedSegment.index),\n        {\n          ...trackList[selectedSegment.track][selectedSegment.index],\n          duration: timestamp - segment.start,\n          keyframes: leftSegmentKeyFrames,\n        },\n        {\n          media: segment.media,\n          start: timestamp,\n          duration: segment.start + segment.duration - timestamp,\n          mediaStart: timestamp - segment.start + segment.mediaStart,\n          texture: segment.texture,\n          keyframes: [interpKeyFrame].concat(rightSegmentKeyFrames),\n        },\n        ...trackList[selectedSegment.track].slice(selectedSegment.index + 1),\n      ],\n      ...trackList.slice(selectedSegment.track + 1),\n    ]);\n  };\n\n  const updateSegment = (id: SegmentID, newSegment: Segment) => {\n    setTrackList([\n      ...trackList.slice(0, id.track),\n      [\n        ...trackList[id.track].slice(0, id.index),\n        newSegment,\n        ...trackList[id.track].slice(id.index + 1),\n      ],\n      ...trackList.slice(id.track + 1),\n    ]);\n  };\n\n  return (\n    <PlaybackController\n      {...props}\n      canvasRef={canvasRef}\n      mediaList={mediaList}\n      setMediaList={setMediaList}\n      trackList={trackList}\n      setTrackList={setTrackList}\n      addVideo={addVideo}\n      deleteVideo={deleteVideo}\n      deleteSelectedSegment={deleteSelectedSegment}\n      renderer={renderer}\n      dragAndDrop={dragAndDrop}\n      selectedSegment={selectedSegment}\n      setSelectedSegment={setSelectedSegment}\n      updateSegment={updateSegment}\n      splitVideo={split}\n    />\n  );\n}\n","import MediaManager from './mediaManager';\nimport { useEffect, useState } from 'react';\nimport { Project } from './types';\nimport instance from '../api';\n\nexport default function ProjectManager() {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [currentProject, setCurrentProject] = useState<number>(0);\n  const [projectUser, setProjectUser] = useState<string>('');\n  const [projectId, setProjectId] = useState<string>('');\n  const [projectName, setProjectName] = useState<string>('');\n  const [projectWidth, setProjectWidth] = useState<number>(1920);\n  const [projectHeight, setProjectHeight] = useState<number>(1080);\n  const [projectFramerate, setProjectFramerate] = useState<number>(30);\n  const [projectDuration, setProjectDuration] = useState<number>(0);\n\n  useEffect(() => {\n    if (currentProject >= projects.length) return;\n    setProjectId(projects[currentProject]._id);\n    setProjectName(projects[currentProject].name);\n    setProjectWidth(projects[currentProject].width);\n    setProjectHeight(projects[currentProject].height);\n    setProjectFramerate(projects[currentProject].framerate);\n    setProjectDuration(projects[currentProject].duration);\n  }, [currentProject, projects]);\n\n  useEffect(() => {\n    if (sessionStorage.getItem('token') != null) {\n      instance.get('/getEmail').then((res) => {\n        setProjectUser(res.data.email);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (projectUser === '') return;\n    instance.get('/getProjects').then((res) => {\n      setProjects(res.data);\n    });\n  }, [projectUser]);\n\n  return (\n    <MediaManager\n      projectUser={projectUser}\n      setProjectUser={setProjectUser}\n      projectHeight={projectHeight}\n      setProjectHeight={setProjectHeight}\n      projectWidth={projectWidth}\n      setProjectWidth={setProjectWidth}\n      projectFramerate={projectFramerate}\n      setProjectFramerate={setProjectFramerate}\n      projectName={projectName}\n      setProjectName={setProjectName}\n      projectId={projectId}\n      setProjectId={setProjectId}\n      projectDuration={projectDuration}\n      setProjectDuration={setProjectDuration}\n      projects={projects}\n      setProjects={setProjects}\n    />\n  );\n}\n","import \"./App.css\";\nimport ProjectManager from \"./model/projectManager\";\n\nfunction App() {\n  return <ProjectManager />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}